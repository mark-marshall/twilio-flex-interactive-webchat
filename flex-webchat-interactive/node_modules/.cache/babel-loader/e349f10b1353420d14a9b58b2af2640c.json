{"ast":null,"code":"import _classCallCheck from \"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mmarshall/Desktop/ps-webchat/src/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport * as FlexWebChat from \"@twilio/flex-webchat-ui\";\nimport customState from './store/state';\nimport customReducer from './store/reducers/customReducer';\nimport EndChatModal from './components/endChatModal';\nimport EndChatButton from './components/endChatButton';\nimport ClickableMessages from './components/clickableMessages';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    var configuration = props.configuration; // Alter the predefined Message\n\n    FlexWebChat.MessagingCanvas.defaultProps.predefinedMessage.authorName = 'Awesome Co';\n    FlexWebChat.MessagingCanvas.defaultProps.predefinedMessage.body = ' ðŸ‘‹ Are you a new or existing customer?'; // Alter the Welcome Message\n\n    FlexWebChat.MessageList.WelcomeMessage = 'Welcome to Awesome Co, I hope you are having a wonderful day!, '; // Chat Header Customizations\n\n    FlexWebChat.MainHeader.defaultProps.imageUrl = './img/companylogo.png';\n    FlexWebChat.MainHeader.defaultProps.titleText = \"Awesome Co\";\n    FlexWebChat.MainHeader.defaultProps.showTitle = true;\n    FlexWebChat.Manager.create(configuration).then(function (manager) {\n      // set some variables on the global window object\n      // these help us determine if flex has loaded or not\n      window.Twilio = window.Twilio || {};\n      FlexWebChat.manager = manager;\n      window.Twilio.FlexWebChat = FlexWebChat; // Register the custom redux/reducer\n\n      customState.addReducer('custom', customReducer);\n      manager.store.replaceReducer(customState.combinedReducers());\n\n      _this.setState({\n        manager: manager\n      }); // Add the close button\n\n\n      FlexWebChat.MessagingCanvas.Content.add( /*#__PURE__*/React.createElement(EndChatModal, {\n        key: \"end-chat-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 53\n        }\n      }));\n      FlexWebChat.MainHeader.Content.remove('close-button');\n      FlexWebChat.MainHeader.Content.add( /*#__PURE__*/React.createElement(EndChatButton, {\n        key: \"end-chat-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 48\n        }\n      }), {\n        sortOrder: -1,\n        align: \"end\"\n      }); // Add the clickable messages\n\n      FlexWebChat.MessageInput.Content.add( /*#__PURE__*/React.createElement(ClickableMessages, {\n        key: \"ClickableMessages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 50\n        }\n      }), {\n        sortOrder: -1\n      });\n    }).catch(function (error) {\n      return _this.setState({\n        error: error\n      });\n    });\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          manager = _this$state.manager,\n          error = _this$state.error;\n\n      if (manager) {\n        return /*#__PURE__*/React.createElement(FlexWebChat.ContextProvider, {\n          manager: manager,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(FlexWebChat.RootContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      if (error) {\n        console.error(\"Failed to initialize Flex Web Chat\", error);\n      }\n\n      return null;\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mmarshall/Desktop/ps-webchat/src/App.js"],"names":["React","FlexWebChat","customState","customReducer","EndChatModal","EndChatButton","ClickableMessages","App","props","state","configuration","MessagingCanvas","defaultProps","predefinedMessage","authorName","body","MessageList","WelcomeMessage","MainHeader","imageUrl","titleText","showTitle","Manager","create","then","manager","window","Twilio","addReducer","store","replaceReducer","combinedReducers","setState","Content","add","remove","sortOrder","align","MessageInput","catch","error","console","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as FlexWebChat from \"@twilio/flex-webchat-ui\";\nimport customState from './store/state';\nimport customReducer from './store/reducers/customReducer';\nimport EndChatModal from './components/endChatModal'\nimport EndChatButton from './components/endChatButton'\nimport ClickableMessages from './components/clickableMessages'\n\nclass App extends React.Component {\n\n  state = {};\n\n  constructor(props) {\n    super(props);\n\n    const { configuration } = props;\n\n    // Alter the predefined Message\n    FlexWebChat.MessagingCanvas.defaultProps.predefinedMessage.authorName = 'Awesome Co';\n    FlexWebChat.MessagingCanvas.defaultProps.predefinedMessage.body = ' ðŸ‘‹ Are you a new or existing customer?';\n  \n    // Alter the Welcome Message\n    FlexWebChat.MessageList.WelcomeMessage = 'Welcome to Awesome Co, I hope you are having a wonderful day!, '\n\n    // Chat Header Customizations\n    FlexWebChat.MainHeader.defaultProps.imageUrl = './img/companylogo.png';\n    FlexWebChat.MainHeader.defaultProps.titleText = \"Awesome Co\";\n    FlexWebChat.MainHeader.defaultProps.showTitle = true;\n      \n    FlexWebChat.Manager.create(configuration)\n        .then(manager => {\n\n            // set some variables on the global window object\n            // these help us determine if flex has loaded or not\n            window.Twilio = window.Twilio || {};\n            FlexWebChat.manager =  manager;\n            window.Twilio.FlexWebChat = FlexWebChat;\n\n\n            // Register the custom redux/reducer\n            customState.addReducer('custom', customReducer);\n            manager.store.replaceReducer(customState.combinedReducers());\n\n            this.setState({ \n              manager \n            });\n\n            // Add the close button\n            FlexWebChat.MessagingCanvas.Content.add(<EndChatModal key=\"end-chat-modal\" />)\n\n            FlexWebChat.MainHeader.Content.remove('close-button');\n            FlexWebChat.MainHeader.Content.add(<EndChatButton key=\"end-chat-button\" />, { sortOrder: -1, align: \"end\" });\n\n            // Add the clickable messages\n            FlexWebChat.MessageInput.Content.add(<ClickableMessages key=\"ClickableMessages\" />, {sortOrder: -1});\n          \n        })\n        .catch(error => this.setState({ error }));\n  }\n  \n\n  render() {\n    const { manager, error } = this.state;\n\n    if (manager) {\n      return (\n        <FlexWebChat.ContextProvider manager={manager}>\n          <FlexWebChat.RootContainer />\n        </FlexWebChat.ContextProvider>\n      );\n    }\n\n    if (error) {\n      console.error(\"Failed to initialize Flex Web Chat\", error);\n    }\n\n    return null;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}