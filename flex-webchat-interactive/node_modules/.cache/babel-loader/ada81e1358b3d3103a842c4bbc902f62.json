{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mmarshall/Desktop/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mmarshall/Desktop/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/mmarshall/Desktop/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mmarshall/Desktop/flex-webchat-interactive/src/App.jsx\";\n\n// Package Imports\nimport React, { useEffect, useState } from 'react';\nimport * as FlexWebChat from '@twilio/flex-webchat-ui'; // Global State Imports\n\nimport customState from './store/state';\nimport customReducer from './store/reducers/customReducer'; // Component Imports\n\nimport Interactives from './components/Interactives'; // Const Imports\n\nimport { loadingPlaceholder, managerStringOverrides } from './consts'; // Component\n\nvar App = function App(_ref) {\n  var configuration = _ref.configuration;\n\n  // State\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      manager = _useState2[0],\n      setManager = _useState2[1]; // Effects\n\n\n  useEffect(function () {\n    getManager();\n  }, []); // Functions\n\n  var getManager = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var manager;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return FlexWebChat.Manager.create(configuration);\n\n            case 2:\n              manager = _context.sent;\n              customState.addReducer('custom', customReducer);\n              manager.store.replaceReducer(customState.combinedReducers()); // Manager string overrides\n\n              manager.strings.EntryPointTagline = managerStringOverrides.entryPointTagLine;\n              manager.strings.PredefinedChatMessageAuthorName = managerStringOverrides.predefineChatMessageAuthorName;\n              manager.strings.PredefinedChatMessageBody = managerStringOverrides.predefinedChatMessageBody;\n              manager.strings.WelcomeMessage = managerStringOverrides.welcomeMessage; // Append custom Interactives Component\n\n              FlexWebChat.MessageList.Content.add( /*#__PURE__*/React.createElement(Interactives, {\n                key: \"interactives\",\n                manager: manager,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 7\n                }\n              })); // Set manager on state\n\n              setManager(manager);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getManager() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Render\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, manager ? /*#__PURE__*/React.createElement(FlexWebChat.ContextProvider, {\n    manager: manager,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FlexWebChat.RootContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, loadingPlaceholder));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mmarshall/Desktop/flex-webchat-interactive/src/App.jsx"],"names":["React","useEffect","useState","FlexWebChat","customState","customReducer","Interactives","loadingPlaceholder","managerStringOverrides","App","configuration","manager","setManager","getManager","Manager","create","addReducer","store","replaceReducer","combinedReducers","strings","EntryPointTagline","entryPointTagLine","PredefinedChatMessageAuthorName","predefineChatMessageAuthorName","PredefinedChatMessageBody","predefinedChatMessageBody","WelcomeMessage","welcomeMessage","MessageList","Content","add"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,2BAAzB,C,CAEA;;AAEA,SAASC,kBAAT,EAA6BC,sBAA7B,QAA2D,UAA3D,C,CAEA;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AACjC;AADiC,kBAEHR,QAAQ,CAAC,IAAD,CAFL;AAAA;AAAA,MAE1BS,OAF0B;AAAA,MAEjBC,UAFiB,kBAIjC;;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CALiC,CASjC;;AACA,MAAMA,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKV,WAAW,CAACW,OAAZ,CAAoBC,MAApB,CAA2BL,aAA3B,CAFL;;AAAA;AAEXC,cAAAA,OAFW;AAGjBP,cAAAA,WAAW,CAACY,UAAZ,CAAuB,QAAvB,EAAiCX,aAAjC;AACAM,cAAAA,OAAO,CAACM,KAAR,CAAcC,cAAd,CAA6Bd,WAAW,CAACe,gBAAZ,EAA7B,EAJiB,CAKjB;;AACAR,cAAAA,OAAO,CAACS,OAAR,CAAgBC,iBAAhB,GACEb,sBAAsB,CAACc,iBADzB;AAEAX,cAAAA,OAAO,CAACS,OAAR,CAAgBG,+BAAhB,GACEf,sBAAsB,CAACgB,8BADzB;AAEAb,cAAAA,OAAO,CAACS,OAAR,CAAgBK,yBAAhB,GACEjB,sBAAsB,CAACkB,yBADzB;AAEAf,cAAAA,OAAO,CAACS,OAAR,CAAgBO,cAAhB,GAAiCnB,sBAAsB,CAACoB,cAAxD,CAZiB,CAajB;;AACAzB,cAAAA,WAAW,CAAC0B,WAAZ,CAAwBC,OAAxB,CAAgCC,GAAhC,eACE,oBAAC,YAAD;AAAc,gBAAA,GAAG,EAAC,cAAlB;AAAiC,gBAAA,OAAO,EAAEpB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAdiB,CAiBjB;;AACAC,cAAAA,UAAU,CAACD,OAAD,CAAV;;AAlBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVE,UAAU;AAAA;AAAA;AAAA,KAAhB,CAViC,CA+BjC;;;AACA,sBACE,0CACGF,OAAO,gBACN,oBAAC,WAAD,CAAa,eAAb;AAA6B,IAAA,OAAO,EAAEA,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD,CAAa,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,gBAKN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,kBAAN,CANJ,CADF;AAWD,CA3CD;;AA6CA,eAAeE,GAAf","sourcesContent":["// Package Imports\nimport React, { useEffect, useState } from 'react';\nimport * as FlexWebChat from '@twilio/flex-webchat-ui';\n\n// Global State Imports\nimport customState from './store/state';\nimport customReducer from './store/reducers/customReducer';\n\n// Component Imports\nimport Interactives from './components/Interactives';\n\n// Const Imports\n\nimport { loadingPlaceholder, managerStringOverrides } from './consts';\n\n// Component\nconst App = ({ configuration }) => {\n  // State\n  const [manager, setManager] = useState(null);\n\n  // Effects\n  useEffect(() => {\n    getManager();\n  }, []);\n\n  // Functions\n  const getManager = async () => {\n    // Init Flex Webchat Manager\n    const manager = await FlexWebChat.Manager.create(configuration);\n    customState.addReducer('custom', customReducer);\n    manager.store.replaceReducer(customState.combinedReducers());\n    // Manager string overrides\n    manager.strings.EntryPointTagline =\n      managerStringOverrides.entryPointTagLine;\n    manager.strings.PredefinedChatMessageAuthorName =\n      managerStringOverrides.predefineChatMessageAuthorName;\n    manager.strings.PredefinedChatMessageBody =\n      managerStringOverrides.predefinedChatMessageBody;\n    manager.strings.WelcomeMessage = managerStringOverrides.welcomeMessage;\n    // Append custom Interactives Component\n    FlexWebChat.MessageList.Content.add(\n      <Interactives key=\"interactives\" manager={manager} />\n    );\n    // Set manager on state\n    setManager(manager);\n  };\n\n  // Render\n  return (\n    <>\n      {manager ? (\n        <FlexWebChat.ContextProvider manager={manager}>\n          <FlexWebChat.RootContainer />\n        </FlexWebChat.ContextProvider>\n      ) : (\n        <div>{loadingPlaceholder}</div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}