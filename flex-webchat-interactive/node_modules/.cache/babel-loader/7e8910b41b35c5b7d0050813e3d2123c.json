{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegistrarConnector = exports.Connector = void 0;\n\nvar operation_retrier_1 = require(\"operation-retrier\");\n\nvar logger_1 = require(\"./logger\");\n\nvar connector_1 = require(\"./connector\");\n\nObject.defineProperty(exports, \"Connector\", {\n  enumerable: true,\n  get: function get() {\n    return connector_1.Connector;\n  }\n});\nvar retrierConfig = {\n  min: 2000,\n  max: 120000,\n  randomness: 0.2\n};\n/**\n * Manages the registrations on ERS service.\n * Deduplicates registrations and manages them automatically\n */\n\nvar RegistrarConnector = /*#__PURE__*/function (_connector_1$Connecto) {\n  _inherits(RegistrarConnector, _connector_1$Connecto);\n\n  /**\n   * Creates new instance of the ERS registrar\n   *\n   * @param Object configuration\n   * @param string notificationId\n   * @param string channelType\n   * @param Array messageTypes\n   */\n  function RegistrarConnector(channelType, context, transport, config) {\n    var _this;\n\n    _classCallCheck(this, RegistrarConnector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RegistrarConnector).call(this, config));\n    _this.channelType = channelType;\n    _this.context = context;\n    _this.transport = transport;\n    return _this;\n  }\n\n  _createClass(RegistrarConnector, [{\n    key: \"updateRegistration\",\n    value: function () {\n      var _updateRegistration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(registration, reasons) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!reasons.has('notificationId')) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.removeRegistration();\n\n              case 3:\n                if (!(!registration.notificationId || !registration.notificationId.length)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", registration);\n\n              case 5:\n                _context.next = 7;\n                return this.register(registration);\n\n              case 7:\n                return _context.abrupt(\"return\", registration);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function updateRegistration(_x, _x2) {\n        return _updateRegistration.apply(this, arguments);\n      }\n\n      return updateRegistration;\n    }()\n  }, {\n    key: \"removeRegistration\",\n    value: function () {\n      var _removeRegistration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var url, headers;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.registrationId) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                url = \"\".concat(this.config.registrarUrl, \"/\").concat(this.registrationId, \"?productId=\").concat(this.context.productId);\n                headers = {\n                  'Content-Type': 'application/json',\n                  'X-Twilio-Token': this.config.token\n                };\n                _context2.prev = 4;\n                logger_1.log.trace('Removing registration for ', this.channelType);\n                _context2.next = 8;\n                return new operation_retrier_1.Retrier(Object.assign(retrierConfig, {\n                  maxAttemptsCount: 3\n                })).run(function () {\n                  return _this2.transport.delete(url, headers);\n                });\n\n              case 8:\n                logger_1.log.debug('Registration removed for', this.channelType);\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](4);\n                logger_1.log.error('Failed to remove of registration ', this.channelType, _context2.t0);\n                throw _context2.t0;\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 11]]);\n      }));\n\n      function removeRegistration() {\n        return _removeRegistration.apply(this, arguments);\n      }\n\n      return removeRegistration;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(registration) {\n        var _this3 = this;\n\n        var registrarRequest, url, headers, response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                logger_1.log.trace('Registering', this.channelType, registration);\n                registrarRequest = {\n                  endpoint_platform: this.context.platform,\n                  channel_type: this.channelType,\n                  version: this.context.protocolVersion.toString(),\n                  message_types: Array.from(registration.messageTypes),\n                  data: {\n                    registration_id: registration.notificationId\n                  },\n                  ttl: 'PT24H'\n                };\n                url = \"\".concat(this.config.registrarUrl, \"?productId=\").concat(this.context.productId);\n                headers = {\n                  'Content-Type': 'application/json',\n                  'X-Twilio-Token': registration.token\n                };\n                logger_1.log.trace('Creating registration for channel ', this.channelType);\n                _context3.prev = 5;\n                _context3.next = 8;\n                return new operation_retrier_1.Retrier(retrierConfig).run(function () {\n                  return _this3.transport.post(url, headers, registrarRequest);\n                });\n\n              case 8:\n                response = _context3.sent;\n                this.registrationId = response.body.id;\n                logger_1.log.debug('Registration created: ', response);\n                _context3.next = 17;\n                break;\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](5);\n                logger_1.log.error('Registration failed: ', _context3.t0);\n                throw _context3.t0;\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[5, 13]]);\n      }));\n\n      function register(_x3) {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }()\n  }]);\n\n  return RegistrarConnector;\n}(connector_1.Connector);\n\nexports.RegistrarConnector = RegistrarConnector;","map":null,"metadata":{},"sourceType":"script"}