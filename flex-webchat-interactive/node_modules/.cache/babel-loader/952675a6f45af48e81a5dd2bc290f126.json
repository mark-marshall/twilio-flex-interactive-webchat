{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/ps-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar InitRegistration = /*#__PURE__*/function () {\n  function InitRegistration(product) {\n    _classCallCheck(this, InitRegistration);\n\n    this.product = product;\n    this.type = 'ers';\n    this.notification_protocol_version = 0;\n    this.message_types = [];\n  }\n  /*\n   * @internal\n   *\n   * Populate init registrations section in the Twilsock configuration generically with\n   * passed-in list of types to register.\n   *\n   * Used only by the SDK, ignore.\n   *\n   * @param {string[]} types List of types to add to init registrations in options.\n   * @param {object} options Twilsock options object to update. Omit to create a new one.\n   */\n\n\n  _createClass(InitRegistration, [{\n    key: \"populateInitRegistrations\",\n    value: function populateInitRegistrations(types) {\n      var s = new Set(this.message_types); // Update options reference in place\n\n      for (var idx in types) {\n        s.add(types[idx]);\n      }\n\n      this.message_types = Array.from(s);\n    }\n  }]);\n\n  return InitRegistration;\n}();\n\nexports.InitRegistration = InitRegistration;","map":null,"metadata":{},"sourceType":"script"}