{"ast":null,"code":"'use strict';\n\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar fails = require('../internals/fails');\n\nvar anObject = require('../internals/an-object');\n\nvar create = require('../internals/object-create');\n\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\n\nvar nativeErrorToString = Error.prototype.toString;\nvar INCORRECT_TO_STRING = fails(function () {\n  if (DESCRIPTORS) {\n    // Chrome 32- incorrectly call accessor\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    var object = create(Object.defineProperty({}, 'name', {\n      get: function get() {\n        return this === object;\n      }\n    }));\n    if (nativeErrorToString.call(object) !== 'true') return true;\n  } // FF10- does not properly handle non-strings\n\n\n  return nativeErrorToString.call({\n    message: 1,\n    name: 2\n  }) !== '2: 1' // IE8 does not properly handle defaults\n  || nativeErrorToString.call({}) !== 'Error';\n});\nmodule.exports = INCORRECT_TO_STRING ? function toString() {\n  var O = anObject(this);\n  var name = normalizeStringArgument(O.name, 'Error');\n  var message = normalizeStringArgument(O.message);\n  return !name ? message : !message ? name : name + ': ' + message;\n} : nativeErrorToString;","map":null,"metadata":{},"sourceType":"script"}