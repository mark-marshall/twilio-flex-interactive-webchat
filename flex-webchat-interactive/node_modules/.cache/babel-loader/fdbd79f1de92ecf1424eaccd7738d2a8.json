{"ast":null,"code":"'use strict';\n\nvar isCallable = require('../internals/is-callable');\n\nvar isObject = require('../internals/is-object');\n\nvar definePropertyModule = require('../internals/object-define-property');\n\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar HAS_INSTANCE = wellKnownSymbol('hasInstance');\nvar FunctionPrototype = Function.prototype; // `Function.prototype[@@hasInstance]` method\n// https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance\n\nif (!(HAS_INSTANCE in FunctionPrototype)) {\n  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, {\n    value: function value(O) {\n      if (!isCallable(this) || !isObject(O)) return false;\n      var P = this.prototype;\n      if (!isObject(P)) return O instanceof this; // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:\n\n      while (O = getPrototypeOf(O)) {\n        if (P === O) return true;\n      }\n\n      return false;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}