{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Configuration = void 0;\nvar SUBSCRIPTIONS_PATH = '/v4/Subscriptions';\nvar MAPS_PATH = '/v3/Maps';\nvar LISTS_PATH = '/v3/Lists';\nvar DOCUMENTS_PATH = '/v3/Documents';\nvar STREAMS_PATH = '/v3/Streams';\nvar INSIGHTS_PATH = '/v3/Insights';\n\nfunction getWithDefault(container, key, defaultValue) {\n  if (container && typeof container[key] !== 'undefined') {\n    return container[key];\n  }\n\n  return defaultValue;\n}\n/**\n * Settings container for Sync library\n */\n\n\nvar Configuration = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options\n   */\n  function Configuration() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Configuration);\n\n    var region = options.region || 'us1';\n    var defaultCdsUrl = \"https://cds.\".concat(region, \".twilio.com\");\n    var baseUri = options.cdsUri || defaultCdsUrl;\n    this.settings = {\n      subscriptionsUri: baseUri + SUBSCRIPTIONS_PATH,\n      documentsUri: baseUri + DOCUMENTS_PATH,\n      listsUri: baseUri + LISTS_PATH,\n      mapsUri: baseUri + MAPS_PATH,\n      streamsUri: baseUri + STREAMS_PATH,\n      insightsUri: baseUri + INSIGHTS_PATH,\n      sessionStorageEnabled: getWithDefault(options.Sync, 'enableSessionStorage', true)\n    };\n  }\n\n  _createClass(Configuration, [{\n    key: \"subscriptionsUri\",\n    get: function get() {\n      return this.settings.subscriptionsUri;\n    }\n  }, {\n    key: \"documentsUri\",\n    get: function get() {\n      return this.settings.documentsUri;\n    }\n  }, {\n    key: \"listsUri\",\n    get: function get() {\n      return this.settings.listsUri;\n    }\n  }, {\n    key: \"mapsUri\",\n    get: function get() {\n      return this.settings.mapsUri;\n    }\n  }, {\n    key: \"streamsUri\",\n    get: function get() {\n      return this.settings.streamsUri;\n    }\n  }, {\n    key: \"insightsUri\",\n    get: function get() {\n      return this.settings.insightsUri;\n    }\n  }, {\n    key: \"backoffConfig\",\n    get: function get() {\n      return this.settings.backoffConfig || {};\n    }\n  }, {\n    key: \"sessionStorageEnabled\",\n    get: function get() {\n      return this.settings.sessionStorageEnabled;\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;","map":null,"metadata":{},"sourceType":"script"}