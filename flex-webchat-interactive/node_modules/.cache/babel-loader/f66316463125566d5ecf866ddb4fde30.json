{"ast":null,"code":"import _slicedToArray from \"/Users/mmarshall/Desktop/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/mmarshall/Desktop/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _Typography;\n\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/base';\nimport PickersToolbar from '../internal/pickers/PickersToolbar';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersToolbarButton from '../internal/pickers/PickersToolbarButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar classes = generateUtilityClasses('PrivateDateRangePickerToolbar', ['penIcon']);\nvar DateRangePickerToolbarRoot = styled(PickersToolbar)(_defineProperty({}, \"& .\".concat(classes.penIcon), {\n  position: 'relative',\n  top: 4\n}));\nvar DateRangePickerToolbarContainer = styled('div')({\n  display: 'flex'\n});\n/**\n * @ignore - internal component.\n */\n\nvar DateRangePickerToolbar = function DateRangePickerToolbar(_ref) {\n  var currentlySelectingRangeEnd = _ref.currentlySelectingRangeEnd,\n      _ref$date = _slicedToArray(_ref.date, 2),\n      start = _ref$date[0],\n      end = _ref$date[1],\n      endText = _ref.endText,\n      isMobileKeyboardViewOpen = _ref.isMobileKeyboardViewOpen,\n      setCurrentlySelectingRangeEnd = _ref.setCurrentlySelectingRangeEnd,\n      startText = _ref.startText,\n      toggleMobileKeyboardView = _ref.toggleMobileKeyboardView,\n      toolbarFormat = _ref.toolbarFormat,\n      _ref$toolbarTitle = _ref.toolbarTitle,\n      toolbarTitle = _ref$toolbarTitle === void 0 ? 'Select date range' : _ref$toolbarTitle;\n\n  var utils = useUtils();\n  var startDateValue = start ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate) : startText;\n  var endDateValue = end ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate) : endText;\n  return /*#__PURE__*/_jsx(DateRangePickerToolbarRoot, {\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: false,\n    penIconClassName: classes.penIcon,\n    children: /*#__PURE__*/_jsxs(DateRangePickerToolbarContainer, {\n      children: [/*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: start !== null ? 'h5' : 'h6',\n        value: startDateValue,\n        selected: currentlySelectingRangeEnd === 'start',\n        onClick: function onClick() {\n          return setCurrentlySelectingRangeEnd('start');\n        }\n      }), _Typography || (_Typography = /*#__PURE__*/_jsxs(Typography, {\n        variant: \"h5\",\n        children: [\"\\xA0\", 'â€“', \"\\xA0\"]\n      })), /*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: end !== null ? 'h5' : 'h6',\n        value: endDateValue,\n        selected: currentlySelectingRangeEnd === 'end',\n        onClick: function onClick() {\n          return setCurrentlySelectingRangeEnd('end');\n        }\n      })]\n    })\n  });\n};\n\nexport default DateRangePickerToolbar;","map":null,"metadata":{},"sourceType":"module"}