{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '@mui/material/Typography';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport { getTimelineOppositeContentUtilityClass } from './timelineOppositeContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var position = ownerState.position,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', \"position\".concat(capitalize(position))]\n  };\n  return composeClasses(slots, getTimelineOppositeContentUtilityClass, classes);\n};\n\nvar TimelineOppositeContentRoot = styled(Typography, {\n  name: 'MuiTimelineOppositeContent',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[\"position\".concat(capitalize(ownerState.position))]];\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _extends({\n    padding: '6px 16px',\n    marginRight: 'auto',\n    textAlign: 'right',\n    flex: 1\n  }, ownerState.position === 'left' && {\n    textAlign: 'left'\n  });\n});\nvar TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiTimelineOppositeContent'\n  });\n\n  var className = props.className,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      positionContext = _React$useContext.position;\n\n  var ownerState = _extends({}, props, {\n    position: positionContext || 'left'\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TimelineOppositeContentRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\nexport default TimelineOppositeContent;","map":null,"metadata":{},"sourceType":"module"}