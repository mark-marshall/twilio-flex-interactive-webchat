{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar TYPING_PATH = '/v1/typing';\nvar TYPING_TIMEOUT = 5;\nvar HTTP_CACHE_LIFETIME = 'PT5S';\nvar CONSUMPTION_HORIZON_SENDING_INTERVAL = 'PT5S';\nvar USER_INFOS_TO_SUBSCRIBE = 100;\nvar MINIMUM_RETRY_DELAY = 1000;\nvar MAXIMUM_RETRY_DELAY = 4000;\nvar MAXIMUM_ATTEMPTS_COUNT = 3;\nvar RETRY_WHEN_THROTTLED = true;\n\nvar Configuration = function () {\n  function Configuration(options) {\n    (0, _classCallCheck3.default)(this, Configuration);\n    options = options || {};\n    var constructorOptions = options.Chat || options.IPMessaging || options || {};\n    this.region = constructorOptions.region || options.region;\n    this.baseUrl = constructorOptions.apiUri || constructorOptions.typingUri || (!this.region || this.region === 'us1' ? 'https://aim.twilio.com' : \"https://aim.\" + this.region + \".twilio.com\");\n    this.typingIndicatorUri = this.baseUrl + TYPING_PATH;\n    this.typingIndicatorTimeoutOverride = constructorOptions.typingIndicatorTimeoutOverride;\n    this.httpCacheIntervalOverride = constructorOptions.httpCacheIntervalOverride;\n    this.consumptionReportIntervalOverride = constructorOptions.consumptionReportIntervalOverride;\n    this.userInfosToSubscribeOverride = constructorOptions.userInfosToSubscribeOverride;\n    this.retryWhenThrottledOverride = constructorOptions.retryWhenThrottledOverride;\n    this.backoffConfigOverride = constructorOptions.backoffConfigOverride;\n  }\n\n  (0, _createClass3.default)(Configuration, [{\n    key: \"typingIndicatorTimeoutDefault\",\n    get: function get() {\n      return TYPING_TIMEOUT * 1000;\n    }\n  }, {\n    key: \"httpCacheIntervalDefault\",\n    get: function get() {\n      return HTTP_CACHE_LIFETIME;\n    }\n  }, {\n    key: \"consumptionReportIntervalDefault\",\n    get: function get() {\n      return CONSUMPTION_HORIZON_SENDING_INTERVAL;\n    }\n  }, {\n    key: \"userInfosToSubscribeDefault\",\n    get: function get() {\n      return USER_INFOS_TO_SUBSCRIBE;\n    }\n  }, {\n    key: \"retryWhenThrottledDefault\",\n    get: function get() {\n      return RETRY_WHEN_THROTTLED;\n    }\n  }, {\n    key: \"backoffConfigDefault\",\n    get: function get() {\n      return {\n        min: MINIMUM_RETRY_DELAY,\n        max: MAXIMUM_RETRY_DELAY,\n        maxAttemptsCount: MAXIMUM_ATTEMPTS_COUNT\n      };\n    }\n  }]);\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;","map":null,"metadata":{},"sourceType":"script"}