{"ast":null,"code":"import _defineProperty from \"/Users/mmarshall/Desktop/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"position\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize, isMuiElement } from '@mui/material/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { timelineContentClasses } from '../TimelineContent';\nimport { timelineOppositeContentClasses } from '../TimelineOppositeContent';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport { getTimelineItemUtilityClass } from './timelineItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var position = ownerState.position,\n      classes = ownerState.classes,\n      hasOppositeContent = ownerState.hasOppositeContent;\n  var slots = {\n    root: ['root', \"position\".concat(capitalize(position)), !hasOppositeContent && 'missingOppositeContent']\n  };\n  return composeClasses(slots, getTimelineItemUtilityClass, classes);\n};\n\nvar TimelineItemRoot = styled('li', {\n  name: 'MuiTimelineItem',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, styles[\"position\".concat(capitalize(ownerState.position))]];\n  }\n})(function (_ref) {\n  var _nthOfTypeEven;\n\n  var ownerState = _ref.ownerState;\n  return _extends({\n    listStyle: 'none',\n    display: 'flex',\n    position: 'relative',\n    minHeight: 70\n  }, ownerState.position === 'left' && {\n    flexDirection: 'row-reverse'\n  }, ownerState.position === 'alternate' && {\n    '&:nth-of-type(even)': (_nthOfTypeEven = {\n      flexDirection: 'row-reverse'\n    }, _defineProperty(_nthOfTypeEven, \"& .\".concat(timelineContentClasses.root), {\n      textAlign: 'right'\n    }), _defineProperty(_nthOfTypeEven, \"& .\".concat(timelineOppositeContentClasses.root), {\n      textAlign: 'left'\n    }), _nthOfTypeEven)\n  }, !ownerState.hasOppositeContent && {\n    '&:before': {\n      content: '\"\"',\n      flex: 1,\n      padding: '6px 16px'\n    }\n  });\n});\nvar TimelineItem = /*#__PURE__*/React.forwardRef(function TimelineItem(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiTimelineItem'\n  });\n\n  var positionProp = props.position,\n      className = props.className,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      positionContext = _React$useContext.position;\n\n  var hasOppositeContent = false;\n  React.Children.forEach(props.children, function (child) {\n    if (isMuiElement(child, ['TimelineOppositeContent'])) {\n      hasOppositeContent = true;\n    }\n  });\n\n  var ownerState = _extends({}, props, {\n    position: positionProp || positionContext || 'right',\n    hasOppositeContent: hasOppositeContent\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TimelineContext.Provider, {\n    value: {\n      position: ownerState.position\n    },\n    children: /*#__PURE__*/_jsx(TimelineItemRoot, _extends({\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ref: ref\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The position where the timeline's item should appear.\n   */\n  position: PropTypes.oneOf(['left', 'right']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TimelineItem;","map":null,"metadata":{},"sourceType":"module"}