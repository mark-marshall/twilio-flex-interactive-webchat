{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.circularDependencyToException = exports.listMetadataForTarget = exports.listRegisteredBindingsForServiceIdentifier = exports.getServiceIdentifierAsString = exports.getFunctionName = void 0;\n\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\n\nfunction getServiceIdentifierAsString(serviceIdentifier) {\n  if (typeof serviceIdentifier === \"function\") {\n    var _serviceIdentifier = serviceIdentifier;\n    return _serviceIdentifier.name;\n  } else if (typeof serviceIdentifier === \"symbol\") {\n    return serviceIdentifier.toString();\n  } else {\n    var _serviceIdentifier = serviceIdentifier;\n    return _serviceIdentifier;\n  }\n}\n\nexports.getServiceIdentifierAsString = getServiceIdentifierAsString;\n\nfunction listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {\n  var registeredBindingsList = \"\";\n  var registeredBindings = getBindings(container, serviceIdentifier);\n\n  if (registeredBindings.length !== 0) {\n    registeredBindingsList = \"\\nRegistered bindings:\";\n    registeredBindings.forEach(function (binding) {\n      var name = \"Object\";\n\n      if (binding.implementationType !== null) {\n        name = getFunctionName(binding.implementationType);\n      }\n\n      registeredBindingsList = registeredBindingsList + \"\\n \" + name;\n\n      if (binding.constraint.metaData) {\n        registeredBindingsList = registeredBindingsList + \" - \" + binding.constraint.metaData;\n      }\n    });\n  }\n\n  return registeredBindingsList;\n}\n\nexports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;\n\nfunction alreadyDependencyChain(request, serviceIdentifier) {\n  if (request.parentRequest === null) {\n    return false;\n  } else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {\n    return true;\n  } else {\n    return alreadyDependencyChain(request.parentRequest, serviceIdentifier);\n  }\n}\n\nfunction dependencyChainToString(request) {\n  function _createStringArr(req, result) {\n    if (result === void 0) {\n      result = [];\n    }\n\n    var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);\n    result.push(serviceIdentifier);\n\n    if (req.parentRequest !== null) {\n      return _createStringArr(req.parentRequest, result);\n    }\n\n    return result;\n  }\n\n  var stringArr = _createStringArr(request);\n\n  return stringArr.reverse().join(\" --> \");\n}\n\nfunction circularDependencyToException(request) {\n  request.childRequests.forEach(function (childRequest) {\n    if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {\n      var services = dependencyChainToString(childRequest);\n      throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + \" \" + services);\n    } else {\n      circularDependencyToException(childRequest);\n    }\n  });\n}\n\nexports.circularDependencyToException = circularDependencyToException;\n\nfunction listMetadataForTarget(serviceIdentifierString, target) {\n  if (target.isTagged() || target.isNamed()) {\n    var m_1 = \"\";\n    var namedTag = target.getNamedTag();\n    var otherTags = target.getCustomTags();\n\n    if (namedTag !== null) {\n      m_1 += namedTag.toString() + \"\\n\";\n    }\n\n    if (otherTags !== null) {\n      otherTags.forEach(function (tag) {\n        m_1 += tag.toString() + \"\\n\";\n      });\n    }\n\n    return \" \" + serviceIdentifierString + \"\\n \" + serviceIdentifierString + \" - \" + m_1;\n  } else {\n    return \" \" + serviceIdentifierString;\n  }\n}\n\nexports.listMetadataForTarget = listMetadataForTarget;\n\nfunction getFunctionName(v) {\n  if (v.name) {\n    return v.name;\n  } else {\n    var name_1 = v.toString();\n    var match = name_1.match(/^function\\s*([^\\s(]+)/);\n    return match ? match[1] : \"Anonymous function: \" + name_1;\n  }\n}\n\nexports.getFunctionName = getFunctionName;","map":null,"metadata":{},"sourceType":"script"}