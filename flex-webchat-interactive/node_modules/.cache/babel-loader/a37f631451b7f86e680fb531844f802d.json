{"ast":null,"code":"var $ = require('../internals/export');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar fails = require('../internals/fails');\n\nvar toString = require('../internals/to-string');\n\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar itoc = require('../internals/base64-map').itoc;\n\nvar $btoa = getBuiltIn('btoa');\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar NO_ARG_RECEIVING_CHECK = !!$btoa && !fails(function () {\n  $btoa();\n}); // `btoa` method\n// https://html.spec.whatwg.org/multipage/webappapis.html#dom-btoa\n\n$({\n  global: true,\n  enumerable: true,\n  forced: NO_ARG_RECEIVING_CHECK\n}, {\n  btoa: function btoa(data) {\n    validateArgumentsLength(arguments.length, 1);\n    if (NO_ARG_RECEIVING_CHECK) return $btoa(data);\n    var string = toString(data);\n    var output = '';\n    var position = 0;\n    var map = itoc;\n    var block, charCode;\n\n    while (charAt(string, position) || (map = '=', position % 1)) {\n      charCode = charCodeAt(string, position += 3 / 4);\n\n      if (charCode > 0xFF) {\n        throw new (getBuiltIn('DOMException'))('The string contains characters outside of the Latin1 range', 'InvalidCharacterError');\n      }\n\n      block = block << 8 | charCode;\n      output += charAt(map, 63 & block >> 8 - position % 1 * 8);\n    }\n\n    return output;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}