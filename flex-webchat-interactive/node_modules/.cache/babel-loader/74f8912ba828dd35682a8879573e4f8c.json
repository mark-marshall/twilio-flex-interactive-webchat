{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar toString = require('../internals/to-string');\n\nvar fails = require('../internals/fails');\n\nvar charAt = uncurryThis(''.charAt);\nvar FORCED = fails(function () {\n  return 'ð ®·'.at(-2) !== \"\\uD842\";\n}); // `String.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\n\n$({\n  target: 'String',\n  proto: true,\n  forced: FORCED\n}, {\n  at: function at(index) {\n    var S = toString(requireObjectCoercible(this));\n    var len = S.length;\n    var relativeIndex = toIntegerOrInfinity(index);\n    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n    return k < 0 || k >= len ? undefined : charAt(S, k);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}