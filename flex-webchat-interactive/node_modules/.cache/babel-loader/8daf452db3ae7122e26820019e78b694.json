{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenStorage = void 0;\n\nvar TokenStorage = /*#__PURE__*/function () {\n  function TokenStorage() {\n    _classCallCheck(this, TokenStorage);\n  }\n\n  _createClass(TokenStorage, null, [{\n    key: \"storeToken\",\n    value: function storeToken(continuationToken, productId) {\n      if (TokenStorage.canStore) {\n        TokenStorage.sessionStorage.setItem(TokenStorage.getKeyName(productId), continuationToken);\n      }\n    }\n  }, {\n    key: \"getStoredToken\",\n    value: function getStoredToken(productId) {\n      if (!TokenStorage.canStore) {\n        return null;\n      }\n\n      return TokenStorage.sessionStorage.getItem(TokenStorage.getKeyName(productId));\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (TokenStorage.canStore) {\n        var flag = TokenStorage.sessionStorage.getItem(TokenStorage.initializedFlag); // Duplicated tab, cleaning up all stored keys\n\n        if (flag) {\n          this.clear();\n        }\n\n        TokenStorage.sessionStorage.setItem(TokenStorage.initializedFlag, 'true'); // When leaving page or refreshing\n\n        TokenStorage.window.addEventListener('unload', function () {\n          TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n        });\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (TokenStorage.canStore) {\n        var keyToDelete = [];\n\n        for (var i = 0; i < TokenStorage.sessionStorage.length; i++) {\n          var key = TokenStorage.sessionStorage.key(i); // We manually removed startsWith here due to some problems with babel polyfill setup.\n          // Restore it when we figure out what's wrong.\n          //if (key.startsWith(TokenStorage.tokenStoragePrefix)) {\n\n          if (key.indexOf(TokenStorage.tokenStoragePrefix) === 0) {\n            keyToDelete.push(key);\n          }\n        }\n\n        keyToDelete.forEach(function (key) {\n          return TokenStorage.sessionStorage.removeItem(key);\n        });\n        TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n      }\n    }\n  }, {\n    key: \"getKeyName\",\n    value: function getKeyName(productId) {\n      return \"\".concat(TokenStorage.tokenStoragePrefix).concat(productId);\n    }\n  }, {\n    key: \"sessionStorage\",\n    get: function get() {\n      try {\n        return global['sessionStorage'];\n      } catch (err) {\n        return null;\n      }\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      try {\n        return global['window'];\n      } catch (err) {\n        return null;\n      }\n    }\n  }, {\n    key: \"canStore\",\n    get: function get() {\n      return TokenStorage.sessionStorage && TokenStorage.window;\n    }\n  }]);\n\n  return TokenStorage;\n}();\n\nexports.TokenStorage = TokenStorage;\nTokenStorage.initializedFlag = 'twilio_twilsock_token_storage';\nTokenStorage.tokenStoragePrefix = 'twilio_continuation_token_';\nTokenStorage.initialize();","map":null,"metadata":{},"sourceType":"script"}