{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/flex-webchat-interactive/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Paginator = void 0;\n/**\n * @class Paginator\n * @classdesc Pagination helper class.\n *\n * @property {Array} items Array of elements on current page.\n * @property {Boolean} hasNextPage Indicates the existence of next page.\n * @property {Boolean} hasPrevPage Indicates the existence of previous page.\n */\n\nvar Paginator = /*#__PURE__*/function () {\n  /*\n  * @constructor\n  * @param {Array} items Array of element for current page.\n  * @param {Object} params\n  * @private\n  */\n  function Paginator(items, source, prevToken, nextToken) {\n    _classCallCheck(this, Paginator);\n\n    this.prevToken = prevToken;\n    this.nextToken = nextToken;\n    this.items = items;\n    this.source = source;\n  }\n\n  _createClass(Paginator, [{\n    key: \"nextPage\",\n\n    /**\n     * Request next page.\n     * Does not modify existing object.\n     * @return {Promise<Paginator>}\n     */\n    value: function () {\n      var _nextPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.hasNextPage) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('No next page');\n\n              case 2:\n                return _context.abrupt(\"return\", this.source(this.nextToken));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function nextPage() {\n        return _nextPage.apply(this, arguments);\n      }\n\n      return nextPage;\n    }()\n    /**\n     * Request previous page.\n     * Does not modify existing object.\n     * @return {Promise<Paginator>}\n     */\n\n  }, {\n    key: \"prevPage\",\n    value: function () {\n      var _prevPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.hasPrevPage) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error('No previous page');\n\n              case 2:\n                return _context2.abrupt(\"return\", this.source(this.prevToken));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function prevPage() {\n        return _prevPage.apply(this, arguments);\n      }\n\n      return prevPage;\n    }()\n  }, {\n    key: \"hasNextPage\",\n    get: function get() {\n      return !!this.nextToken;\n    }\n  }, {\n    key: \"hasPrevPage\",\n    get: function get() {\n      return !!this.prevToken;\n    }\n  }]);\n\n  return Paginator;\n}();\n\nexports.Paginator = Paginator;","map":null,"metadata":{},"sourceType":"script"}