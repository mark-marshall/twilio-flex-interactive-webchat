{"ast":null,"code":"var $ = require('../internals/export');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar apply = require('../internals/function-apply');\n\nvar bind = require('../internals/function-bind');\n\nvar aConstructor = require('../internals/a-constructor');\n\nvar anObject = require('../internals/an-object');\n\nvar isObject = require('../internals/is-object');\n\nvar create = require('../internals/object-create');\n\nvar fails = require('../internals/fails');\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\nvar ObjectPrototype = Object.prototype;\nvar push = [].push; // `Reflect.construct` method\n// https://tc39.es/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\n\nvar NEW_TARGET_BUG = fails(function () {\n  function F() {\n    /* empty */\n  }\n\n  return !(nativeConstruct(function () {\n    /* empty */\n  }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  nativeConstruct(function () {\n    /* empty */\n  });\n});\nvar FORCED = NEW_TARGET_BUG || ARGS_BUG;\n$({\n  target: 'Reflect',\n  stat: true,\n  forced: FORCED,\n  sham: FORCED\n}, {\n  construct: function construct(Target, args\n  /* , newTarget */\n  ) {\n    aConstructor(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0:\n          return new Target();\n\n        case 1:\n          return new Target(args[0]);\n\n        case 2:\n          return new Target(args[0], args[1]);\n\n        case 3:\n          return new Target(args[0], args[1], args[2]);\n\n        case 4:\n          return new Target(args[0], args[1], args[2], args[3]);\n      } // w/o altered newTarget, lot of arguments case\n\n\n      var $args = [null];\n      apply(push, $args, args);\n      return new (apply(bind, Target, $args))();\n    } // with altered newTarget, not support built-in constructors\n\n\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : ObjectPrototype);\n    var result = apply(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}