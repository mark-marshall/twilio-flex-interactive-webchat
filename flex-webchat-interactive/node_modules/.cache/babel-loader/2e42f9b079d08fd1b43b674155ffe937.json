{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BindingWhenSyntax = void 0;\n\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\n\nvar constraint_helpers_1 = require(\"./constraint_helpers\");\n\nvar BindingWhenSyntax = function () {\n  function BindingWhenSyntax(binding) {\n    this._binding = binding;\n  }\n\n  BindingWhenSyntax.prototype.when = function (constraint) {\n    this._binding.constraint = constraint;\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\n    this._binding.constraint = constraint_helpers_1.namedConstraint(name);\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenTargetIsDefault = function () {\n    this._binding.constraint = function (request) {\n      var targetIsDefault = request.target !== null && !request.target.isNamed() && !request.target.isTagged();\n      return targetIsDefault;\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\n    this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenParentNamed = function (name) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.namedConstraint(name)(request.parentRequest);\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n    this._binding.constraint = function (request) {\n      return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\n    this._binding.constraint = function (request) {\n      return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n    this._binding.constraint = function (request) {\n      return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n    this._binding.constraint = function (request) {\n      return constraint_helpers_1.traverseAncerstors(request, constraint);\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n    this._binding.constraint = function (request) {\n      return !constraint_helpers_1.traverseAncerstors(request, constraint);\n    };\n\n    return new binding_on_syntax_1.BindingOnSyntax(this._binding);\n  };\n\n  return BindingWhenSyntax;\n}();\n\nexports.BindingWhenSyntax = BindingWhenSyntax;","map":null,"metadata":{},"sourceType":"script"}