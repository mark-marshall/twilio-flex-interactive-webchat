{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"ampm\", \"inputFormat\", \"maxDate\", \"maxDateTime\", \"maxTime\", \"minDate\", \"minDateTime\", \"minTime\", \"openTo\", \"orientation\", \"views\"];\nimport { useThemeProps } from '@mui/material/styles';\nimport { useDefaultDates, useUtils } from '../internal/pickers/hooks/useUtils';\nimport { pick12hOr24hFormat } from '../internal/pickers/text-field-helper';\nexport function useDateTimePickerDefaultizedProps(_ref, name) {\n  var ampm = _ref.ampm,\n      inputFormat = _ref.inputFormat,\n      maxDateProp = _ref.maxDate,\n      maxDateTime = _ref.maxDateTime,\n      maxTime = _ref.maxTime,\n      minDateProp = _ref.minDate,\n      minDateTime = _ref.minDateTime,\n      minTime = _ref.minTime,\n      _ref$openTo = _ref.openTo,\n      openTo = _ref$openTo === void 0 ? 'day' : _ref$openTo,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? 'portrait' : _ref$orientation,\n      _ref$views = _ref.views,\n      views = _ref$views === void 0 ? ['year', 'day', 'hours', 'minutes'] : _ref$views,\n      other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var utils = useUtils();\n  var defaultDates = useDefaultDates();\n  var minDate = minDateProp != null ? minDateProp : defaultDates.minDate;\n  var maxDate = maxDateProp != null ? maxDateProp : defaultDates.maxDate;\n  var willUseAmPm = ampm != null ? ampm : utils.is12HourCycleInCurrentLocale();\n\n  if (orientation !== 'portrait') {\n    throw new Error('We are not supporting custom orientation for DateTimePicker yet :(');\n  }\n\n  return useThemeProps({\n    props: _extends({\n      openTo: openTo,\n      views: views,\n      ampm: willUseAmPm,\n      ampmInClock: true,\n      orientation: orientation,\n      showToolbar: true,\n      allowSameDateSelection: true,\n      minDate: minDateTime != null ? minDateTime : minDate,\n      minTime: minDateTime != null ? minDateTime : minTime,\n      maxDate: maxDateTime != null ? maxDateTime : maxDate,\n      maxTime: maxDateTime != null ? maxDateTime : maxTime,\n      disableIgnoringDatePartForTimeValidation: Boolean(minDateTime || maxDateTime),\n      acceptRegex: willUseAmPm ? /[\\dap]/gi : /\\d/gi,\n      mask: '__/__/____ __:__',\n      disableMaskedInput: willUseAmPm,\n      inputFormat: pick12hOr24hFormat(inputFormat, willUseAmPm, {\n        localized: utils.formats.keyboardDateTime,\n        '12h': utils.formats.keyboardDateTime12h,\n        '24h': utils.formats.keyboardDateTime24h\n      })\n    }, other),\n    name: name\n  });\n}","map":null,"metadata":{},"sourceType":"module"}