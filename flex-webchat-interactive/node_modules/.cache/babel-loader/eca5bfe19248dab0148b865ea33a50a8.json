{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tagProperty = exports.tagParameter = exports.decorate = void 0;\n\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\n\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\n\nfunction tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {\n  var metadataKey = METADATA_KEY.TAGGED;\n\n  _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);\n}\n\nexports.tagParameter = tagParameter;\n\nfunction tagProperty(annotationTarget, propertyName, metadata) {\n  var metadataKey = METADATA_KEY.TAGGED_PROP;\n\n  _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);\n}\n\nexports.tagProperty = tagProperty;\n\nfunction _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {\n  var paramsOrPropertiesMetadata = {};\n  var isParameterDecorator = typeof parameterIndex === \"number\";\n  var key = parameterIndex !== undefined && isParameterDecorator ? parameterIndex.toString() : propertyName;\n\n  if (isParameterDecorator && propertyName !== undefined) {\n    throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\n  }\n\n  if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {\n    paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);\n  }\n\n  var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];\n\n  if (!Array.isArray(paramOrPropertyMetadata)) {\n    paramOrPropertyMetadata = [];\n  } else {\n    for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {\n      var m = paramOrPropertyMetadata_1[_i];\n\n      if (m.key === metadata.key) {\n        throw new Error(ERROR_MSGS.DUPLICATED_METADATA + \" \" + m.key.toString());\n      }\n    }\n  }\n\n  paramOrPropertyMetadata.push(metadata);\n  paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;\n  Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);\n}\n\nfunction _decorate(decorators, target) {\n  Reflect.decorate(decorators, target);\n}\n\nfunction _param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\n\nfunction decorate(decorator, target, parameterIndex) {\n  if (typeof parameterIndex === \"number\") {\n    _decorate([_param(parameterIndex, decorator)], target);\n  } else if (typeof parameterIndex === \"string\") {\n    Reflect.decorate([decorator], target, parameterIndex);\n  } else {\n    _decorate([decorator], target);\n  }\n}\n\nexports.decorate = decorate;","map":null,"metadata":{},"sourceType":"script"}