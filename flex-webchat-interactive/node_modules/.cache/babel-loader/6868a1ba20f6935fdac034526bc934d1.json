{"ast":null,"code":"var $ = require('../internals/export');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar fails = require('../internals/fails');\n\nvar toString = require('../internals/to-string');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar ctoi = require('../internals/base64-map').ctoi;\n\nvar disallowed = /[^\\d+/a-z]/i;\nvar whitespaces = /[\\t\\n\\f\\r ]+/g;\nvar finalEq = /[=]+$/;\nvar $atob = getBuiltIn('atob');\nvar fromCharCode = String.fromCharCode;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar exec = uncurryThis(disallowed.exec);\nvar NO_SPACES_IGNORE = fails(function () {\n  return atob(' ') !== '';\n});\nvar NO_ARG_RECEIVING_CHECK = !NO_SPACES_IGNORE && !fails(function () {\n  $atob();\n}); // `atob` method\n// https://html.spec.whatwg.org/multipage/webappapis.html#dom-atob\n\n$({\n  global: true,\n  enumerable: true,\n  forced: NO_SPACES_IGNORE || NO_ARG_RECEIVING_CHECK\n}, {\n  atob: function atob(data) {\n    validateArgumentsLength(arguments.length, 1);\n    if (NO_ARG_RECEIVING_CHECK) return $atob(data);\n    var string = replace(toString(data), whitespaces, '');\n    var output = '';\n    var position = 0;\n    var bc = 0;\n    var chr, bs;\n\n    if (string.length % 4 == 0) {\n      string = replace(string, finalEq, '');\n    }\n\n    if (string.length % 4 == 1 || exec(disallowed, string)) {\n      throw new (getBuiltIn('DOMException'))('The string is not correctly encoded', 'InvalidCharacterError');\n    }\n\n    while (chr = charAt(string, position++)) {\n      if (hasOwn(ctoi, chr)) {\n        bs = bc % 4 ? bs * 64 + ctoi[chr] : ctoi[chr];\n        if (bc++ % 4) output += fromCharCode(255 & bs >> (-2 * bc & 6));\n      }\n    }\n\n    return output;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}