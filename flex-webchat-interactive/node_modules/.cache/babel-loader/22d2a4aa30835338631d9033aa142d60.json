{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lookup = void 0;\n\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\n\nvar Lookup = function () {\n  function Lookup() {\n    this._map = new Map();\n  }\n\n  Lookup.prototype.getMap = function () {\n    return this._map;\n  };\n\n  Lookup.prototype.add = function (serviceIdentifier, value) {\n    if (serviceIdentifier === null || serviceIdentifier === undefined) {\n      throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n    }\n\n    if (value === null || value === undefined) {\n      throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n    }\n\n    var entry = this._map.get(serviceIdentifier);\n\n    if (entry !== undefined) {\n      entry.push(value);\n\n      this._map.set(serviceIdentifier, entry);\n    } else {\n      this._map.set(serviceIdentifier, [value]);\n    }\n  };\n\n  Lookup.prototype.get = function (serviceIdentifier) {\n    if (serviceIdentifier === null || serviceIdentifier === undefined) {\n      throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n    }\n\n    var entry = this._map.get(serviceIdentifier);\n\n    if (entry !== undefined) {\n      return entry;\n    } else {\n      throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n    }\n  };\n\n  Lookup.prototype.remove = function (serviceIdentifier) {\n    if (serviceIdentifier === null || serviceIdentifier === undefined) {\n      throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n    }\n\n    if (!this._map.delete(serviceIdentifier)) {\n      throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n    }\n  };\n\n  Lookup.prototype.removeByCondition = function (condition) {\n    var _this = this;\n\n    this._map.forEach(function (entries, key) {\n      var updatedEntries = entries.filter(function (entry) {\n        return !condition(entry);\n      });\n\n      if (updatedEntries.length > 0) {\n        _this._map.set(key, updatedEntries);\n      } else {\n        _this._map.delete(key);\n      }\n    });\n  };\n\n  Lookup.prototype.hasKey = function (serviceIdentifier) {\n    if (serviceIdentifier === null || serviceIdentifier === undefined) {\n      throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n    }\n\n    return this._map.has(serviceIdentifier);\n  };\n\n  Lookup.prototype.clone = function () {\n    var copy = new Lookup();\n\n    this._map.forEach(function (value, key) {\n      value.forEach(function (b) {\n        return copy.add(key, b.clone());\n      });\n    });\n\n    return copy;\n  };\n\n  Lookup.prototype.traverse = function (func) {\n    this._map.forEach(function (value, key) {\n      func(key, value);\n    });\n  };\n\n  return Lookup;\n}();\n\nexports.Lookup = Lookup;","map":null,"metadata":{},"sourceType":"script"}