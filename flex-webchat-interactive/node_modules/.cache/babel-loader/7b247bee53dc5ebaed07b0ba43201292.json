{"ast":null,"code":"import * as React from 'react';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport default function useTreeItem(nodeId) {\n  var _React$useContext = React.useContext(TreeViewContext),\n      focus = _React$useContext.focus,\n      isExpanded = _React$useContext.isExpanded,\n      isExpandable = _React$useContext.isExpandable,\n      isFocused = _React$useContext.isFocused,\n      isDisabled = _React$useContext.isDisabled,\n      isSelected = _React$useContext.isSelected,\n      multiSelect = _React$useContext.multiSelect,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      toggleExpansion = _React$useContext.toggleExpansion;\n\n  var expandable = isExpandable ? isExpandable(nodeId) : false;\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var disabled = isDisabled ? isDisabled(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n\n  var handleExpansion = function handleExpansion(event) {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n      if (expandable && !(multiple && isExpanded(nodeId))) {\n        toggleExpansion(event, nodeId);\n      }\n    }\n  };\n\n  var handleSelection = function handleSelection(event) {\n    if (!disabled) {\n      if (!focused) {\n        focus(event, nodeId);\n      }\n\n      var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n      if (multiple) {\n        if (event.shiftKey) {\n          selectRange(event, {\n            end: nodeId\n          });\n        } else {\n          selectNode(event, nodeId, true);\n        }\n      } else {\n        selectNode(event, nodeId);\n      }\n    }\n  };\n\n  var preventSelection = function preventSelection(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey || disabled) {\n      // Prevent text selection\n      event.preventDefault();\n    }\n  };\n\n  return {\n    disabled: disabled,\n    expanded: expanded,\n    selected: selected,\n    focused: focused,\n    handleExpansion: handleExpansion,\n    handleSelection: handleSelection,\n    preventSelection: preventSelection\n  };\n}","map":null,"metadata":{},"sourceType":"module"}