{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.log = exports.Logger = void 0;\n\nvar logger = require(\"loglevel\");\n\nfunction prepareLine(prefix, args) {\n  return [\"\".concat(new Date().toISOString(), \" Notifications \").concat(prefix, \":\")].concat(Array.from(args));\n}\n\nvar Logger = /*#__PURE__*/function () {\n  function Logger() {\n    _classCallCheck(this, Logger);\n\n    this.prefix = '';\n  }\n\n  _createClass(Logger, [{\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      logger.setLevel(level);\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      logger.debug.apply(null, prepareLine('T' + this.prefix, args));\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      logger.debug.apply(null, prepareLine('D' + this.prefix, args));\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      logger.info.apply(null, prepareLine('I' + this.prefix, args));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      logger.warn.apply(null, prepareLine('W' + this.prefix, args));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      logger.error.apply(null, prepareLine('E' + this.prefix, args));\n    }\n  }], [{\n    key: \"scope\",\n    value: function scope() {\n      var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      // TBD this.prefix += ' ' + prefix;\n      return new Logger();\n    }\n  }]);\n\n  return Logger;\n}();\n\nexports.Logger = Logger;\nvar logInstance = Logger.scope();\nexports.log = logInstance;","map":null,"metadata":{},"sourceType":"script"}