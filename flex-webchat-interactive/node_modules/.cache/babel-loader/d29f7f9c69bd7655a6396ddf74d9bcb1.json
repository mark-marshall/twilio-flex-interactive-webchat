{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/mmarshall/Desktop/twilio-flex-interactive-webchat/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Configuration = void 0;\nvar packageVersion = '0.5.14';\n/**\n * Settings container for the Twilsock client library\n */\n\nvar Configuration = /*#__PURE__*/function () {\n  /**\n   * @param {String} token - authentication token\n   * @param {Object} options - options to override defaults\n   */\n  function Configuration(token, activeGrant) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Configuration);\n\n    this.confirmedCapabilities = new Set();\n    this.activeGrant = activeGrant;\n    this._token = token;\n    var region = options.region || 'us1';\n    var defaultTwilsockUrl = \"wss://tsock.\".concat(region, \".twilio.com/v3/wsconnect\");\n    var twilsockOptions = options.twilsock || options.Twilsock || {};\n    this.url = twilsockOptions.uri || defaultTwilsockUrl;\n    this._continuationToken = options.continuationToken ? options.continuationToken : null;\n    this.logLevel = options.logLevel ? options.logLevel : 'error';\n    this.retryPolicy = options.retryPolicy ? options.retryPolicy : {\n      min: 1 * 1000,\n      max: 2 * 60 * 1000,\n      randomness: 0.2\n    };\n    this.clientMetadata = options.clientMetadata ? options.clientMetadata : {};\n    this.clientMetadata.ver = packageVersion;\n    this.initRegistrations = options.initRegistrations ? options.initRegistrations : null;\n    this.tweaks = options.tweaks ? options.tweaks : null;\n  }\n\n  _createClass(Configuration, [{\n    key: \"updateToken\",\n    value: function updateToken(token) {\n      this._token = token;\n    }\n  }, {\n    key: \"updateContinuationToken\",\n    value: function updateContinuationToken(continuationToken) {\n      this._continuationToken = continuationToken;\n    }\n  }, {\n    key: \"token\",\n    get: function get() {\n      return this._token;\n    }\n  }, {\n    key: \"continuationToken\",\n    get: function get() {\n      return this._continuationToken;\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;","map":null,"metadata":{},"sourceType":"script"}