{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar anInstance = require('../internals/an-instance');\n\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\n\nvar DOMExceptionConstants = require('../internals/dom-exception-constants');\n\nvar clearErrorStack = require('../internals/clear-error-stack');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar DOM_EXCEPTION = 'DOMException';\nvar Error = getBuiltIn('Error');\nvar NativeDOMException = getBuiltIn(DOM_EXCEPTION);\n\nvar $DOMException = function DOMException() {\n  anInstance(this, DOMExceptionPrototype);\n  var argumentsLength = arguments.length;\n  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);\n  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');\n  var that = new NativeDOMException(message, name);\n  var error = Error(message);\n  error.name = DOM_EXCEPTION;\n  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));\n  inheritIfRequired(that, this, $DOMException);\n  return that;\n};\n\nvar DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;\nvar ERROR_HAS_STACK = ('stack' in Error(DOM_EXCEPTION));\nvar DOM_EXCEPTION_HAS_STACK = ('stack' in new NativeDOMException(1, 2));\nvar FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !DOM_EXCEPTION_HAS_STACK; // `DOMException` constructor patch for `.stack` where it's required\n// https://webidl.spec.whatwg.org/#es-DOMException-specialness\n\n$({\n  global: true,\n  forced: IS_PURE || FORCED_CONSTRUCTOR\n}, {\n  // TODO: fix export logic\n  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException\n});\nvar PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);\nvar PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;\n\nif (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {\n  if (!IS_PURE) {\n    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));\n  }\n\n  for (var key in DOMExceptionConstants) {\n    if (hasOwn(DOMExceptionConstants, key)) {\n      var constant = DOMExceptionConstants[key];\n      var constantName = constant.s;\n\n      if (!hasOwn(PolyfilledDOMException, constantName)) {\n        defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}