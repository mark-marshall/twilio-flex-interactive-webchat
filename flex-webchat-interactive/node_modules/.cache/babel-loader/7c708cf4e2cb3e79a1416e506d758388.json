{"ast":null,"code":"'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar hasOwn = require('../internals/has-own-property');\n\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar inheritIfRequired = require('../internals/inherit-if-required');\n\nvar normalizeStringArgument = require('../internals/normalize-string-argument');\n\nvar installErrorCause = require('../internals/install-error-cause');\n\nvar clearErrorStack = require('../internals/clear-error-stack');\n\nvar ERROR_STACK_INSTALLABLE = require('../internals/error-stack-installable');\n\nvar IS_PURE = require('../internals/is-pure');\n\nmodule.exports = function (FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {\n  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;\n  var path = FULL_NAME.split('.');\n  var ERROR_NAME = path[path.length - 1];\n  var OriginalError = getBuiltIn.apply(null, path);\n  if (!OriginalError) return;\n  var OriginalErrorPrototype = OriginalError.prototype; // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006\n\n  if (!IS_PURE && hasOwn(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;\n  if (!FORCED) return OriginalError;\n  var BaseError = getBuiltIn('Error');\n  var WrappedError = wrapper(function (a, b) {\n    var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, undefined);\n    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();\n    if (message !== undefined) createNonEnumerableProperty(result, 'message', message);\n    if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(result, 'stack', clearErrorStack(result.stack, 2));\n    if (this && isPrototypeOf(OriginalErrorPrototype, this)) inheritIfRequired(result, this, WrappedError);\n    if (arguments.length > OPTIONS_POSITION) installErrorCause(result, arguments[OPTIONS_POSITION]);\n    return result;\n  });\n  WrappedError.prototype = OriginalErrorPrototype;\n\n  if (ERROR_NAME !== 'Error') {\n    if (setPrototypeOf) setPrototypeOf(WrappedError, BaseError);else copyConstructorProperties(WrappedError, BaseError, {\n      name: true\n    });\n  }\n\n  copyConstructorProperties(WrappedError, OriginalError);\n  if (!IS_PURE) try {\n    // Safari 13- bug: WebAssembly errors does not have a proper `.name`\n    if (OriginalErrorPrototype.name !== ERROR_NAME) {\n      createNonEnumerableProperty(OriginalErrorPrototype, 'name', ERROR_NAME);\n    }\n\n    OriginalErrorPrototype.constructor = WrappedError;\n  } catch (error) {\n    /* empty */\n  }\n  return WrappedError;\n};","map":null,"metadata":{},"sourceType":"script"}