import { CountryData, FlagPositionsType } from "./CountryManager.definition";
/**
 * @category Core / Manager
 * @class CountryManager
 * @classdesc Country Manager.
 * @hideconstructor
 * @private
 */
export declare const CountryManager: {
    /**
     * Get all country
     */
    getAllCountries: () => Promise<CountryData[]>;
    /**
     * Get positions of all flags in sprite
     */
    getAllCountriesFlagPositions: () => Promise<FlagPositionsType>;
    /**
     * Get flag position on sprite https://assets.flex.twilio.com/assets/img/flag-spritesheet.png
     * @param {string} countryCode - Alpha2code of country.
     */
    getFlagPositionFromCode: (countryCode: string) => Promise<number>;
    /**
     * Return the correspondent phone country code for a given region code
     *
     * @param {string} regionCode - A valid phone region code
     * @returns {number} - The country code matching the region code, if any
     */
    getCountryCodeForRegion: (regionCode: string) => Promise<number>;
    /**
     * Get the phone region code for a given phone number
     *
     * @param  {string} phoneNumber - Any phone number
     * @returns {Promise<string>} The matched region code for the given number, when any
     */
    getRegionCodeFromNumber: (phoneNumber: string) => Promise<string>;
    /**
     * Convert a phone number using E.164 international format
     *
     * @param  {string} phoneNumber - Any international phone number
     * @param  {string} [defaultCountryAlpha2Code] - Default alpha 2 country code
     * @returns {string} - E.164 formatted number, or null when not possible
     */
    formatPhoneNumberWithCountryCode: (phoneNumber: string, defaultCountryAlpha2Code?: string) => string;
};
