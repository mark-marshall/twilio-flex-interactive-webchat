import * as React from "react";
import { CSSProps } from "../CSSProps";
/**
 * @callback DialpadButtonClickCallback
 * @param {string} value value of clicked key
 * @returns {void}
 * @memberof Dialpad
 */
export declare type DialpadButtonClickCallback = (value: string) => void;
/**
 * @typedef  Dialpad.DialpadProps
 * @property {DialpadButtonClickCallback} [onClick] - Callback when a dialpad button is clicked
 * @property {React.RefObject<HTMLInputElement>}
 */
export interface DialpadProps {
    onClick: DialpadButtonClickCallback;
    inputRef?: React.RefObject<HTMLInputElement>;
    disabled?: boolean;
    compact?: boolean;
}
/**
 * @typedef Theme.DialpadButtonThemeProps
 * @property {(CSSProps | { disabled: CSSProps })} Container - Style for the dialpad button's container
 * @property {CSSProps} Caption - Style for the dialpad button's caption
 * @property {CSSProps} Description - Style for the dialpad button's description
 */
export interface DialpadButtonThemeProps {
    Container: CSSProps & {
        disabled?: CSSProps;
    };
    Caption: CSSProps;
    Description: CSSProps;
}
/**
 * @typedef Theme.DialpadThemeProps
 * @property {Theme.DialpadButtonThemeProps} Button - Style for the dialpad's buttons
 */
export interface DialpadThemeProps {
    Button: DialpadButtonThemeProps;
}
interface State {
    animate: {
        [key: string]: boolean;
    };
}
/**
 * A standard dialpad
 * Can be themed with [theme.Dialpad]{@link Dialpad.DialPadThemeProps}
 * @component
 * @category Components / Basic
 * @hideconstructor
 * @param {Dialpad.DialpadProps} props
 * @private
 */
export declare class Dialpad extends React.PureComponent<DialpadProps, State> {
    private ignoreTargets;
    private onKeyPressHandler;
    private onKeyUpHandler;
    constructor(props: DialpadProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
export {};
