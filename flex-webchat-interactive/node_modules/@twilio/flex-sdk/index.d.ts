/// <reference types="node" />
import { LogLevelDesc } from 'loglevel';
import { LogLevelNumbers } from 'loglevel';

/**
 * @public
 */
export declare interface AccountConfig {
    get<K extends AccountConfigKeys>(key: K): AccountConfigData[K];
    set(config: Partial<AccountConfigData>): Promise<void>;
}

/**
 * Account Configuration Data Response
 * @public
 */
export declare interface AccountConfigData<TUI = any> {
    /**
     * The SID of the Account that created the resource
     */
    accountSid: string;
    /**
     * An object that contains application-specific data
     */
    attributes: object;
    /**
     * Whether call recording is enabled
     */
    callRecordingEnabled: boolean;
    /**
     * The call recording webhook URL
     */
    callRecordingWebhookUrl: string | null;
    /**
     * The SID of the chat service this user belongs to
     */
    chatServiceInstanceSid: string;
    /**
     * An object that contains the CRM attributes
     */
    crmAttributes: object | null;
    /**
     * A list of objects that contain the configurations for the Integrations supported in this configuration
     */
    integrations?: Array<IntegrationsConfig> | null;
    /**
     * The CRM Callback URL
     */
    crmCallbackUrl: string | null;
    /**
     * Whether CRM is present for Flex
     */
    crmEnabled: boolean | null;
    /**
     * The CRM Fallback URL
     */
    crmFallbackUrl: string | null;
    /**
     * The CRM type
     */
    crmType: string | null;
    /**
     * The ISO 8601 date and time in GMT when the Configuration resource was created
     */
    dateCreated: Date;
    /**
     * The ISO 8601 date and time in GMT when the Configuration resource was last updated
     */
    dateUpdated: Date;
    /**
     * The SID of the Messaging service instance
     */
    messagingServiceInstanceSid: string | null;
    /**
     * The URL where the Flex instance is hosted
     */
    runtimeDomain: string;
    /**
     * The SID of the Flex service instance
     */
    flexServiceInstanceSid: string | null;
    /**
     * The list of outbound call flows
     */
    outboundCallFlows: {
        [key: string]: OutboundFlows;
    } | null;
    /**
     * If flex-ui should load plugins
     */
    pluginServiceEnabled: boolean | null;
    /**
     * The plugin service attributes
     */
    pluginServiceAttributes: object | null;
    /**
     * The list of public attributes, which are visible to unauthenticated clients
     */
    publicAttributes: object;
    /**
     * The Flex Service version
     */
    serviceVersion: string | null;
    /**
     * The list of serverless service SIDs
     */
    serverlessServiceSids: Array<string> | null;
    /**
     * The status of the Flex onboarding. Can be: \'ok\', \'inprogress\',\'notstarted\'
     */
    status: string;
    /**
     * The TaskRouter SID of the offline activity
     */
    taskrouterOfflineActivitySid?: string;
    /**
     * The Skill description for TaskRouter workers
     */
    taskrouterSkills?: Array<SkillDefinition>;
    /**
     * The SID of the TaskRouter Target TaskQueue
     */
    taskrouterTargetTaskqueueSid: string;
    /**
     * The SID of the TaskRouter target Workflow
     */
    taskrouterTargetWorkflowSid: string;
    /**
     * The list of TaskRouter TaskQueues
     */
    taskrouterTaskqueues: Array<TaskQueue> | null;
    /**
     * The TaskRouter Worker attributes
     */
    taskrouterWorkerAttributes: {
        [key: string]: object;
    } | null;
    /**
     * The TaskRouter default channel capacities and availability for workers
     */
    taskrouterWorkerChannels: {
        [key: string]: WorkerChannel;
    } | null;
    /**
     * The SID of the TaskRouter Workspace
     */
    taskrouterWorkspaceSid: string;
    /**
     * The object that defines the NPM packages and versions to be used in Hosted Flex
     */
    uiDependencies: {
        [key: string]: string;
    } | null;
    /**
     * The object that describes Flex UI characteristics and settings
     */
    uiAttributes: TUI;
    /**
     * The primary language of the Flex UI
     */
    uiLanguage: string | null;
    /**
     * The Pinned UI version
     */
    uiVersion: string;
    queueStatsConfiguration: QueueStatsConfiguration | null;
    /**
     * The absolute URL of the Configuration resource
     */
    url: string;
}

/**
 * Account config keys
 * Possible keys from AccountConfigData structure
 * @public
 */
export declare type AccountConfigKeys = keyof AccountConfigData;

/**
 * Account sid option
 * @public
 */
export declare interface AccountSidOption {
    /**
     * Account sid
     */
    accountSid: string;
}

/**
 * Realtime Queue Stats Service
 * Flex Realtime Queue Stats from flex_insights Sync service instance
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akracik@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Activity Statistics
 * @public
 */
export declare interface ActivityStats {
    /**
     * Activity SID
     */
    sid: string;
    /**
     * Activity friendly name
     */
    friendlyName: string;
    /**
     * Number of available workers
     */
    availableWorkers: number;
    /**
     * Number of workers in total
     */
    workers: number;
}

/**
 * @public
 */
export declare const auth: AuthenticatorFactory;

/**
 * Authenticator
 * Provides methods for authentication
 *
 * @public
 */
export declare interface Authenticator {
    /**
     * Validates token
     * @param token - token to validate
     * @returns token information if valid
     */
    validateToken(token: string): Promise<TokenData>;
    /**
     * Refreshes token used by the SDK. Only applicable if Flex FA service is used
     * @param token - old token
     * @returns new token information
     */
    refreshToken(token: string): Promise<TokenRefreshResult>;
    /**
     * Returns identity provider url
     * @param config - config options
     * @returns idp url
     */
    getIdpUrl(config: IdpConfig): Promise<string>;
}

/**
 * Builds an Authentication object with the given account sid
 * @param accountSid - Account sid
 *
 * @public
 */
export declare type AuthenticatorFactory = (accountSid: string) => Authenticator;

/**
 * @public
 */
export declare interface Client extends EventPublisher<ClientEvent> {
    readonly config: ClientConfigType;
    readonly roles: Array<Role>;
    readonly token: string;
    readonly realtimeStats: RealtimeStats;
    destroy(): Promise<void>;
    updateToken(token: string): Promise<void>;
    createTelemetryClient<U extends object>(name: string): TelemetryClient<U>;
}

/**
 * @public
 */
export declare interface ClientConfigType {
    readonly account: AccountConfig;
}

/**
 * @public
 */
export declare enum ClientEvent {
    TokenExpired = "tokenExpired",
    TokenAboutToExpire = "tokenAboutToExpire",
    TokenUpdated = "tokenUpdated",
    TokenAutoUpdateFailed = "tokenAutoUpdateFailed",
    TokenMaxLifetimeReached = "tokenMaxLifetimeReached",
    ConnectionLost = "connectionLost",
    ConnectionRestored = "connectionRestored",
    Disconnected = "disconnected"
}

/**
 * Client options
 * @public
 */
export declare interface ClientOptions {
    /**
     * Session related options
     */
    readonly session: SessionOptions;
    /**
     * Logger related options
     */
    readonly logger: LoggerOptions;
    /**
     * Telemetry related options
     */
    readonly telemetry: TelemetryOptions;
    /**
     * Twilio Region ID, e.g. "us1", "ie1" etc
     */
    region: string;
    /**
     * Name of the app that is using Flex SDK, e.g. "My Custom App"
     */
    appName: string;
    /**
     * Version of the app that is using Flex SDK, e.g. "2.3"
     */
    appVersion: string;
}

/**
 * @public
 */
export declare type ClientProvider = (token: string, userOptions?: DeepPartial<ClientOptions>) => Promise<Client>;

/**
 * @public
 */
export declare const createClient: ClientProvider;

/**
 * Realtime Queue Stats Service
 * Flex Realtime Queue Stats from flex_insights Sync service instance
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akracik@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Current tasks statistics
 * @public
 */
export declare interface CurrentTasksStats {
    /**
     * Number of active tasks
     */
    activeTasks: number;
    /**
     * Number of waiting tasks
     */
    waitingTasks: number;
    /**
     * Number of reserved tasks
     */
    reservedTasks: number;
    /**
     * Number of pending tasks
     */
    pendingTasks: number;
    /**
     * Number of assigned tasks
     */
    assignedTasks: number;
    /**
     * Number of wrapping tasks
     */
    wrappingTasks: number;
    /**
     * Total number of tasks
     */
    totalTasks: number;
    /**
     * SID of the task with longest waiting time
     */
    longestTaskWaitingSid: string;
    /**
     * Date since the task with longest waiting time is pending
     */
    longestTaskWaitingFrom: Date;
    /**
     * Age of the task in seconds with longest waiting time
     */
    longestTaskWaitingAge: number;
    /**
     * Number of tasks by priority
     */
    tasksByPriority: {
        [key: string]: number;
    };
    /**
     * Date when the object was last updated
     */
    timestampUpdated: Date;
}

/**
 * @public
 */
export declare type DeepPartial<T> = {
    [P in keyof T]?: DeepPartial<T[P]> | T[P];
};

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * default configuration
 * @public
 */
export declare interface DefaultQueueStatsConfiguration {
    service_level_threshold?: number;
    short_abandoned_threshold?: number;
    reset_timezone?: string;
    reset_time?: string;
}

/**
 * Error code
 * @public
 */
export declare enum ErrorCode {
    /**
     * Access denied
     */
    Forbidden = 45502,
    /**
     * Invalid parameter value received as argument
     */
    InvalidParams = 45503,
    /**
     * Function called in invalid state of the object
     */
    InvalidState = 45505,
    /**
     * Resource was not found
     */
    NotFound = 45504,
    /**
     * Unknown error thrown by a child SDK
     */
    SDK = 45500,
    /**
     * Unknown error
     */
    Unknown = 45501,
    /**
     * Bad request error
     */
    BadRequest = 70002,
    /**
     * Invalid certificate
     */
    InvalidCertificate = 70251,
    /**
     * Invalid access token
     */
    InvalidAccessToken = 20101,
    /**
     * Access Token expired or expiration date invalid
     */
    AccessTokenExpired = 20104,
    /**
     * Validation error
     */
    ValidationError = 45004,
    /**
     * Authorization error
     */
    AuthorizationError = 45003,
    /**
     * PermissionDenied error
     */
    PermissionDeniedError = 20003,
    /**
     * TwilsockConnection error
     */
    TwilsockConnectionError = 45511,
    /**
     * Connection error
     */
    ConnectionError = 45011,
    /**
     * Twilsock rate limit exceeded
     */
    TooManyRequests = 20429
}

/**
 * Error severity
 * @public
 */
export declare enum ErrorSeverity {
    Fatal = "fatal",
    Error = "error",
    Warning = "warning",
    Info = "info"
}

/**
 * @public
 */
export declare interface EventPublisher<E extends string | symbol> {
    on(eventName: E, listener: (...args: unknown[]) => void): this;
    removeListener(eventName: E, listener: (...args: unknown[]) => void): this;
}

/**
 * Error thrown by Flex SDK
 * @public
 */
export declare class FlexSdkError extends Error {
    constructor(errorCode: ErrorCode, metadata?: FlexSdkErrorMetadata, details?: string, wrappedError?: Error);
    /**
     * Error code
     *
     * @readonly
     * @type {ErrorCode}
     */
    get code(): ErrorCode;
    /**
     * Detailed information about what caused the error
     *
     * @readonly
     * @type {string | undefined}
     */
    get details(): string | undefined;
    /**
     * Gets the wrapped Error that caused the exception
     *
     * @readonly
     * @returns {Error | undefined}
     */
    get wrappedError(): Error | undefined;
    /**
     * Gets the metadata about the error
     *
     * @readonly
     * @returns {FlexSdkErrorMetadata}
     */
    get metadata(): FlexSdkErrorMetadata;
}

/**
 * Metadata about error thrown by Flex SDK
 * @public
 */
export declare interface FlexSdkErrorMetadata {
    module?: string;
    resourceSid?: string;
    severity: ErrorSeverity;
    source?: string;
    unhandled?: boolean;
}

/**
 * @public
 */
export declare const getLogger: LoggerFactory<string>;

/**
 * @public
 */
export declare const getPublicConfig: PublicConfigProvider;

/**
 * @public
 */
export declare const getTwilioIdpUrl: TwilioIdpUrlFunction;

/**
 * Realtime Queue Stats Service
 * Flex Realtime Queue Stats from flex_insights Sync service instance
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akracik@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Historical tasks statistics
 * @public
 */
export declare interface HistoricalTasksStats {
    /**
     * Total tasks count
     */
    totalTasksCount: number;
    /**
     * Handled tasks count
     */
    handledTasksCount: number;
    /**
     * Handled tasks count within the SLA threshold
     */
    handledTasksWithinSlThresholdCount: number;
    /**
     * Percentage of handled tasks within the SLA threshold
     */
    handledTasksWithinSlThresholdPercentage: number;
    /**
     * Short abandoned tasks count
     */
    shortAbandonedTasksCount: number;
    /**
     * Percentage of short abandoned tasks
     */
    shortAbandonedTasksPercentage: number;
    /**
     * Abandoned tasks count
     */
    abandonedTasksCount: number;
    /**
     * Percentage of abandoned tasks
     */
    abandonedTasksPercentage: number;
    /**
     * Flow-out tasks count
     */
    flowOutTasksCount: number;
    /**
     * Percentage of flow-out tasks
     */
    flowOutTasksPercentage: number;
    /**
     * SLA percentage
     */
    slaPercentage: number;
    /**
     * Date when the object was last updated
     */
    timestampUpdated: Date;
}

/**
 * Identity provider configuration interface
 *
 * @public
 */
export declare interface IdpConfig {
    /**
     * redirect url where to return back from identity provider to log in to Flex
     */
    redirectUrl: string;
}

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Integrations config
 * @public
 */
export declare interface IntegrationsConfig {
    name: string;
    type: string;
    active: boolean;
    config: object;
    /**
     * Url of logo
     */
    logo?: string;
    author?: string;
}

/**
 * Logger
 * @public
 */
export declare interface Logger {
    trace: (...log: unknown[]) => void;
    debug: (...log: unknown[]) => void;
    log: (...log: unknown[]) => void;
    info: (...log: unknown[]) => void;
    warn: (...log: unknown[]) => void;
    error: (...log: unknown[]) => void;
    setLevel: (level: LoggerLevel) => void;
    getLevel: () => LoggerLevelNumbers;
}

/**
 * Logger Factory
 * @public
 */
export declare type LoggerFactory<TName = LoggerName> = (name: TName) => Logger;

/**
 * Logger level
 * @public
 */
export declare type LoggerLevel = LogLevelDesc;

/**
 * @public
 */
export declare type LoggerLevelNumbers = LogLevelNumbers;

/**
 * @public
 */
export declare enum LoggerName {
    Client = "flex:Client",
    Error = "flex:Error",
    Session = "flex:Session",
    Twilsock = "flex:Twilsock",
    Auth = "flex:Auth",
    Config = "flex:Config",
    Sync = "flex:Sync",
    SyncAdapter = "flex:SyncAdapter",
    QueueStats = "flex:QueueStats"
}

/**
 * Logger options
 * @public
 */
export declare interface LoggerOptions {
    level: LoggerLevel;
}

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Outbound flows
 * @public
 */
export declare interface OutboundFlows {
    /**
     * Enable flag
     */
    enabled: boolean;
    /**
     * Phone number
     */
    caller_id: string;
    /**
     * Queue sid
     */
    queue_sid: string;
    /**
     * Country code
     */
    location: string;
    /**
     * Workflow sid
     */
    workflow_sid: string;
}

/**
 * Public configuration object
 * @public
 */
export declare interface PublicConfig {
    /**
     * Runtime domain
     */
    runtimeDomain: string;
    publicAttributes: PublicConfigAttributes | null;
    /**
     * Account SID (may be encrypted)
     */
    accountSid: string;
}

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Public configuration attributes
 * @public
 */
export declare interface PublicConfigAttributes {
    [key: string]: object | unknown;
    /**
     * Whether the SSO flow needs to be launched in a popup window
     */
    loginPopup?: boolean;
}

/**
 * Public Config Provider
 * @public
 */
export declare type PublicConfigProvider = (option: XOR<AccountSidOption, RuntimeDomainOption>) => Promise<PublicConfig>;

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Queue channel configuration object
 * @public
 */
export declare interface QueueChannelConfiguration {
    /**
     * Queue sid
     */
    queue_sid: string;
    channel_sid: string;
    service_level_threshold: number;
    short_abandoned_threshold: number;
}

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Queue configuration object
 * @public
 */
export declare interface QueueConfiguration {
    queue_sid: string;
    reset_timezone: string;
    reset_time: string;
}

/**
 * Stats for a single queue
 * @public
 */
export declare interface QueueStats {
    readonly sid: string;
    readonly friendlyName: string;
    readonly tasks: TasksByTime;
    readonly dateUpdated: Date;
    /**
     * Gets worker activity stats
     */
    getWorkerStats(): Promise<Subscribable<WorkerStats>>;
    /**
     * Gets stats for a specific task channel in the queue.
     *
     * @param sid - SID of the task channel
     */
    getTaskChannelStats(sid: string): Promise<Subscribable<TaskChannelStats>>;
    /**
     * Gets stats for all task channels in the queue.
     */
    getAllTaskChannelStats(): Promise<Subscribable<TaskChannelStats>[]>;
}

/**
 * @public
 * @param key - key of the item that was changed
 * Callback for notifying about changes in queue stats
 */
export declare type QueueStatsCallback = (key: QueueStatsItemKey) => void;

/**
 * Queue stats configuration object
 * @public
 */
export declare interface QueueStatsConfiguration {
    default: DefaultQueueStatsConfiguration;
    /**
     * List of Queue Configurations for an account
     */
    queue_configurations: Array<QueueConfiguration>;
    /**
     * List of Queue Channel Configurations for an account
     */
    queue_channel_configurations: Array<QueueChannelConfiguration>;
}

/**
 * @public
 * Key of inner queue stats item
 */
export declare enum QueueStatsItemKey {
    Metadata = "metadata"
}

/**
 * Interface providing real-time statistics
 * @public
 */
export declare interface RealtimeStats {
    getQueueStatsBySid(queueSid: string): Promise<Subscribable<QueueStats, QueueStatsCallback>>;
    getWorkspaceStats(): Promise<Subscribable<WorkspaceStats>>;
}

/**
 * Role of the user
 *
 * @public
 */
export declare type Role = "guest" | "agent" | "admin" | "supervisor";

/**
 * Runtime domain option
 * @public
 */
export declare interface RuntimeDomainOption {
    /**
     * Runtime domain
     */
    runtimeDomain: string;
}

/**
 * @public
 */
export declare interface SessionOptions {
    readonly autoUpdateToken: boolean;
}

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Taskrouter skill definition
 * @public
 */
export declare interface SkillDefinition {
    /**
     * Skill name
     */
    name: string;
    /**
     * Skill type, if true value can be given between min and max
     */
    multivalue: boolean;
    /**
     * minimum value
     */
    minimum?: number;
    /**
     * maximum value
     */
    maximum?: number;
}

/**
 * Allows subscribing and unsubscribing for updates in the object.
 * @public
 */
export declare type Subscribable<T, CallbackType = Function> = T & {
    subscribe(callback: CallbackType): void;
    unsubscribe(callback: CallbackType): void;
};

/**
 * Statistics for a task channel. Listens on "tasks_<sid>_now", "tasks_<sid>_thirty_minutes" and "tasks_<sid>_today" item updates.
 * @public
 */
export declare interface TaskChannelStats {
    sid: string;
    friendlyName: string;
    tasks: TasksByTime;
}

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Task queues used for Transfers
 * @public
 */
export declare interface TaskQueue {
    /**
     * TaskQueue Sid
     */
    sid: string;
    /**
     * TaskQueue available as target
     */
    targettable: boolean;
}

/**
 * Realtime Queue Stats Service
 * Flex Realtime Queue Stats from flex_insights Sync service instance
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akracik@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Tasks by status
 * @public
 */
export declare interface TasksByStatus {
    /**
     * Number of reserved tasks
     */
    reserved: number;
    /**
     * Number of pending tasks
     */
    pending: number;
    /**
     * Number of assigned tasks
     */
    assigned: number;
    /**
     * Number of wrapping tasks
     */
    wrapping: number;
}

/**
 * Provides task statistics for time periods
 * @public
 */
export declare interface TasksByTime {
    getCurrentTasks(): Promise<Subscribable<CurrentTasksStats>>;
    getForPeriod(period: TimeSpan): Promise<Subscribable<HistoricalTasksStats>>;
}

/**
 * Telemetry client
 * @public
 */
export declare interface TelemetryClient<U extends object = object> {
    /**
     * Name of the type of client attributes
     */
    name: string;
    /**
     * Session data
     */
    sessionData?: U;
    /**
     * Creates event group
     * @param name - group name
     */
    createEventGroup<T>(name?: string): TelemetryEventGroup<T>;
    setSessionData(sessionData: U): Promise<void>;
}

/**
 * Event for error specific events
 * @public
 */
export declare interface TelemetryErrorEvent extends TelemetryEvent {
    /**
     * Error payload
     */
    error: {
        /**
         * Error code
         */
        code: number;
        /**
         * Whether the error should be reported to the debugger
         */
        debugger?: boolean;
        /**
         * Description of the error
         */
        description?: string;
        /**
         * Error message
         */
        message: string;
        /**
         * Code area, module or component that reported the error
         */
        module?: string;
        /**
         * Name of the plugin where the error originated from
         */
        plugin?: string;
        /**
         * Plugin version that caused the error
         */
        pluginVersion?: string;
        /**
         * Name of the reporter
         */
        reporter: string;
        /**
         * Resource SID that the error correlates with
         */
        resourceSid?: string;
        /**
         * Severity of the error
         */
        severity: "fatal" | "error" | "warning" | "info";
        /**
         * Source where the error originated, e.g. when thrown by some other SDK
         */
        source: string;
        /**
         * Stack Trace of the error
         */
        stackTrace?: string;
        /**
         * Whether it's an unhandled error
         */
        unhandled?: boolean;
        /**
         * Error message of the error that was wrapped
         */
        wrappedErrorMessage?: string;
        /**
         * Error code of the error that was wrapped
         */
        wrappedErrorCode?: number;
    };
}

/**
 * Event base properties
 * @public
 */
export declare interface TelemetryEvent {
    /**
     * Event name
     */
    eventName: string;
    /**
     * Source that initiated the event
     */
    eventSource?: string;
}

/**
 * Wrapper for a list of events and common fields for all the events
 * @public
 */
export declare interface TelemetryEventGroup<T> {
    /**
     * Group name
     */
    name?: string;
    /**
     * TelemetryClientAttributes
     */
    telemetryClient: TelemetryClient<object>;
    /**
     * Add events to group
     * @param events - Events to be added
     */
    addEvents(...events: (T & TelemetryEvent)[]): Promise<TelemetryProcessingResult>;
    /**
     * Add error event to group
     * @param event - ErrorEvent to be added
     */
    addErrorEvent(event: TelemetryErrorEvent): Promise<TelemetryProcessingResult>;
}

/**
 * @public
 */
export declare type TelemetryOptions = {
    /**
     * Set to `false` to opt-out from submitting errors via telemetry
     */
    readonly reportErrors: boolean;
};

/**
 * @public
 */
export declare type TelemetryProcessingResult = {
    eventsSucceeded: number;
    eventsFailed: number;
    eventsNotProcessed: number;
};

/**
 * Realtime Queue Stats Service
 * Flex Realtime Queue Stats from flex_insights Sync service instance
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: akracik@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Time span for statistics
 * @public
 */
export declare enum TimeSpan {
    Today = "tasks_today",
    ThirtyMinutes = "tasks_thirty_minutes",
    Yesterday = "tasks_yesterday"
}

/**
 * Token information
 *
 * @public
 */
export declare type TokenData = {
    roles: Array<Role>;
    valid: boolean;
    dateExpired: Date;
};

/**
 * Object returned by refreshToken()
 *
 * @public
 */
export declare type TokenRefreshResult = {
    token: string;
    dateExpired: Date;
};

/**
 * Returns Twilio IDP url
 * @param port - port
 *
 * @public
 */
export declare type TwilioIdpUrlFunction = (port?: string) => string;

/**
 * @public
 */
export declare const version: string;

/**
 * Without
 * Constructs a type by forcing all properties from T that are not assignable to U to be undefined
 * @public
 */
export declare type Without<T, U> = {
    [P in Exclude<keyof T, keyof U>]?: never;
};

/**
 * Configuration Service
 * Configuration for a Flex instance
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Default Worker attribute settings
 * @public
 */
export declare interface WorkerChannel {
    /**
     * Unique name of the TaskChannel associated to this WorkerChannel
     */
    name: string;
    /**
     * Default capacity value
     */
    capacity: number;
    /**
     * Default availability
     */
    availability: boolean;
}

/**
 * Worker Statistics
 * @public
 */
export declare interface WorkerStats {
    /**
     * Activity Statistics
     */
    activityStatistics: Array<ActivityStats>;
    /**
     * Total number of available workers
     */
    totalAvailableWorkers: number;
    /**
     * Total number of unavailable workers
     */
    totalUnavailableWorkers: number;
    /**
     * Total number of offline workers
     */
    totalOfflineWorkers: number;
    /**
     * Total number of eligible workers
     */
    totalEligibleWorkers: number;
    /**
     * Date when the object was last updated
     */
    timestampUpdated: Date;
}

/**
 * Workspace statistics
 * @public
 */
export declare interface WorkspaceStats {
    /**
     * Total tasks
     */
    totalTasks: number;
    /**
     * Activity Statistics
     */
    activityStatistics: Array<ActivityStats>;
    tasksByStatus: TasksByStatus;
    /**
     * Number of tasks by priority
     */
    tasksByPriority: {
        [key: string]: number;
    };
    /**
     * SID of the task with longest waiting time
     */
    longestTaskWaitingSid: string;
    /**
     * Date since the task with longest waiting time is pending
     */
    longestTaskWaitingFrom: Date;
    /**
     * Date of last workspace update
     */
    workspaceModified: Date;
    /**
     * Total number of workers
     */
    totalWorkers: number;
    /**
     * Workspace SID
     */
    sid: string;
    /**
     * Server\'s timestamp
     */
    timestamp: Date;
}

/**
 * XOR
 * Constructs a type that requires type T or U, but not both
 * @public
 */
export declare type XOR<T, U> = T | U extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;

export { }
