import * as React from "react";
import { CSSProps } from "@twilio/flex-ui-core";
/**
 * @typedef Theme.MainContainerThemeProps
 * @type {CSSProps}
 */
export declare type MainContainerThemeProps = CSSProps;
/**
 * Properties of Main container component.
 * @typedef MainContainer.MainContainerProps
 * @property {string} [height="548px"] - Represents the height of the webchat container.
 * @property {string} [width="276px"] - Represents the width of the webchat container.
 * @property {string} [bottom="74px"] - Represents the bottom possition of the webchat container.
 * @property {string} [right="20px"] - Represents the right possition of the webchat container.
 * @property {{enabled: boolean}} [markdownSupport] - Config object for Chat markdown support
 * @property {DynamicComponentChildren<MainContainer.MainContainerChildrenProps>} [children] - children
 * @property {boolean} [showNotificationBar=true] - Whether notifications will be shown or not. If set to false, no notifications will be shown.
 */
export interface MainContainerProps {
    height?: string;
    width?: string;
    bottom?: string;
    right?: string;
    markdownSupport?: {
        enabled: boolean;
    };
    showNotificationBar?: boolean;
}
/**
 * Properties of Main container component.
 * @typedef {MainContainer.MainContainerProps} MainContainer.MainContainerChildrenProps
 * @property {string} [engagementStage] - Represents the stage of the webchat.
 * @property {string} [channelSid] - Unique indentifier of the channel.
 * @property {boolean} [startEngagementOnInit] - Represents if the engagement should start on init..
 */
export interface MainContainerChildrenProps extends MainContainerProps {
    engagementStage?: string;
    channelSid?: string;
    startEngagementOnInit?: boolean;
}
/**
 * @classdesc This is a main container for the webchat.
 * Can be themed with [theme.MainContainer]{@link MainContainer.MainContainerThemeProps}
 * @component
 * @hideconstructor
 * @param {MainContainer.MainContainerProps} - Properties to be passed to configure this component.
 * @category Components / Programmable
 */
export declare class MainContainer extends React.PureComponent<MainContainerProps> {
    static readonly displayName = "MainContainer";
    /**
     * Dynamic content store
     * @static
     * @type {DynamicContentStore<MainContainer.MainContainerChildrenProps>}
     * @readonly
     */
    static readonly Content: import("@twilio/flex-ui-core").DynamicContentStore;
    /**
     * Default properties
     * @static
     * @type {MainContainer.MainContainerProps}
     * @readonly
     */
    static readonly defaultProps: MainContainerProps;
    static updateAll(): void;
    render(): JSX.Element;
}
export declare const Connected: any;
