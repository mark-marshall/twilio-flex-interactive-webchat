import * as React from "react";
import { Config } from "../../state/AppConfig";
import { SessionState } from "../../state/SessionState";
/**
 * Properties of Root container component.
 * @typedef RootContainer.RootContainerChildrenProps
 * @property {boolean} [isEntryPointExpanded] - Represents if entry point is expanded.
 * @property {string} [identity] - Represents the identity of the user.
 * @property {string} [channelSid] - Unique identification of the channel.
 * @property {Config} [config] - Represents the app configuration.
 * @property {string} [engagementStage] - Represents the stage of the webchat.
 * @property {SessionState} [session] - Represents the session state.
 */
export interface RootContainerChildrenProps {
    isEntryPointExpanded?: boolean;
    identity?: string;
    channelSid?: string;
    config?: Config;
    engagementStage?: string;
    session?: SessionState;
}
/**
 * @classdesc This component renders {@link MainContainer} and {@link EntryPoint}.
 * @component
 * @hideconstructor
 * @category Components / Programmable
 */
export declare class RootContainer extends React.PureComponent {
    private static readonly friendlyName;
    static readonly displayName = "RootContainer";
    /**
     * Dynamic content store
     * @static
     * @type {DynamicContentStore<RootContainer.RootContainerChildrenProps>}
     * @readonly
     */
    static readonly Content: import("@twilio/flex-ui-core").DynamicContentStore;
    static updateAll(): void;
    render(): JSX.Element;
}
export declare const Connected: any;
