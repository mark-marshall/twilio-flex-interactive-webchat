import * as React from "react";
import { CSSProps } from "@twilio/flex-ui-core";
import { ThemeProps } from "../theme";
import { EntryPointProps } from "./EntryPoint.definition";
/**
 * @typedef Theme.EntryPointThemeProps
 * @property {CSSProps} Container - Styles for container.
 */
export interface EntryPointThemeProps {
    Container: CSSProps;
}
/**
 * Properties of Entry point component.
 * @typedef {EntryPoint.EntryPointProps} EntryPoint.EntryPointChildrenProps
 * @readonly
 * @property {boolean} [isEntryPointExpanded] - Represents if entrypoint is expanded.
 */
export interface EntryPointChildrenProps extends EntryPointProps {
    readonly isEntryPointExpanded?: boolean;
}
/**
 * @classdesc This is a Entry point container holding the icon and tagline.
 * Can be themed with [theme.EntryPoint]{@link EntryPoint.EntryPointThemeProps}
 * @component
 * @hideconstructor
 * @param {EntryPoint.EntryPointProps} - Properties to be passed to configure this component.
 * @category Components / Programmable
 */
export declare class EntryPoint extends React.PureComponent<EntryPointProps & ThemeProps, undefined> {
    static readonly displayName = "EntryPoint";
    /**
     * Dynamic content store
     * @static
     * @type {DynamicContentStore<EntryPoint.EntryPointChildrenProps>}
     * @readonly
     */
    static readonly Content: import("@twilio/flex-ui-core").DynamicContentStore;
    /**
     * Default properties
     * @static
     * @type {EntryPoint.EntryPointProps}
     * @readonly
     */
    static readonly defaultProps: EntryPointProps;
    static updateAll(): void;
    render(): JSX.Element;
}
export declare const ConnectedImpl: any;
