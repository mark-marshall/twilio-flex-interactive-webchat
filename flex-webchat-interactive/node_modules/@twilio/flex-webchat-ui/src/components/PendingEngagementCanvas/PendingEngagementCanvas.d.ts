import * as React from "react";
import { CSSProps } from "@twilio/flex-ui-core";
/**
 * @typedef Theme.PendingEngagementCanvasThemeProps
 * @property {CSSProps} Container - Styles for container.
 * @property {CSSProps} CancelButton - Styles for cancel button.
 */
export interface PendingEngagementCanvasThemeProps {
    Container: CSSProps;
    CancelButton: CSSProps;
}
/**
 * Properties of Pending engagement canvas.
 * @typedef PendingEngagementCanvas.PendingEngagementCanvasChildrenProps
 * @property {string} [taskSid] - Unique identifier of the task.
 * @property {number} [timeoutSeconds] - Represents the time to wait.
 * @property {string} [cancelEngagementUrl] - Represents the url used to cancel the engagement.
 */
export interface PendingEngagementCanvasChildrenProps {
    readonly taskSid?: string;
    readonly cancelEngagementUrl?: string;
}
/**
 * @classdesc This component renders pending engagement state
 * Can be themed with [theme.PendingEngagementCanvas]{@link PendingEngagementCanvas.PendingEngagementCanvasThemeProps}
 * @component
 * @hideconstructor
 * @category Components / Programmable
 */
export declare class PendingEngagementCanvas extends React.PureComponent {
    private static readonly friendlyName;
    static readonly displayName = "PendingEngagementCanvas";
    /**
     * Dynamic content store
     * @static
     * @type {DynamicContentStore<PendingEngagementCanvas.PendingEngagementCanvasChildrenProps>}
     * @readonly
     */
    static readonly Content: import("@twilio/flex-ui-core").DynamicContentStore;
    render(): JSX.Element;
}
export declare const Connected: any;
