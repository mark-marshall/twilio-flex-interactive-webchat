import { Store } from "redux";
import { FlexState } from "../Store";
import * as AppConfig from "../state/AppConfig";
import { Strings } from "../localization";
import * as TwilioChat from "twilio-chat";
import defaultConfiguration from "./FlexWebChat.conf";
export { defaultConfiguration };
/**
 * @class Manager
 * @classdesc Flex WebChat manager
 * @hideconstructor
 * @category Core / Manager
 */
export declare class Manager {
    private _store?;
    private _strings;
    private _initialized;
    /**
     * @private
     */
    constructor(config: AppConfig.Config, store: Store<FlexState>);
    private static validateConfig;
    /**
     * Creates an instance of Flex Manager
     *
     * @static
     * @param {Config} userConfiguration configuration
     * @param {Store<FlexState>} [store] custom Redux store
     * @returns new instance of manager
     */
    static create(userConfiguration: AppConfig.Config, store?: Store<FlexState>): Promise<Manager>;
    /**
     * Current configuration
     * @type {Config}
     * @readonly
     */
    get configuration(): AppConfig.Config;
    /**
     * Updates current configuration by merging provided configuration objects deeply with the current configuration.
     * @param {...Array<Config>} configs configuration objects to merge in
     */
    updateConfig(...configs: Array<AppConfig.Config>): void;
    set configuration(value: AppConfig.Config);
    /**
     * Instance of Flex WebChat Redux store
     * @see {@link https://redux.js.org/api/store}
     * @type {Store<FlexState>}
     * @readonly
     */
    get store(): Store<FlexState>;
    /**
     * Get or set strings / templates for Flex WebChat. Add or updates existing ones.
     * @type {Strings}
     */
    get strings(): Strings;
    set strings(value: Strings);
    /**
     * Instance of Twilio Chat Client.
     * @see {@link https://media.twiliocdn.com/sdk/js/chat/v3.0/docs}
     *
     * @readonly
     * @type {twilio-chat:Client}
     */
    get chatClient(): TwilioChat.Client;
    /**
     * @private
     */
    private loadInitialData;
    private configureReduxStore;
    private setStringsFromConfig;
    private initSession;
}
