import * as React from "react";
import { Manager } from "./Manager";
/**
 * Flex WebChat context interface
 * @typedef {Object} ContextType
 * @property {Manager} manager - an instance of Flex WebChat Manager class
 * @memberof ContextProvider
 */
export interface ContextType {
    manager: Manager;
}
/**
 * Context Provider props interface
 * @typedef {ContextProvider.ContextType} ContextProviderProps
 * @memberof ContextProvider
 */
export interface ContextProviderProps extends ContextType {
}
/**
 * @category Framework / Context
 * @class AppContext
 * @classdesc Flex WebChat context. Use to access context in React components.
 * @hideconstructor
 * @example
 * export class ContextProvider extends React.PureComponent<ContextProviderProps> {
 *     render() {
 *         return (
 *             <AppContext.Provider value={this.props}>
 *                 {this.props.children}
 *             </AppContext.Provider>
 *         );
 *     }
 * }
 */
export declare const AppContext: React.Context<ContextProviderProps>;
/**
 * Flex WebChat Context Provider component. Renders {@link ContextProvider.AppContext}, Redux provider and {@link ThemeProvider}.
 * @hideconstructor
 * @param {ContextProvider.ContextProviderProps} props properties to be passed to configure this component.
 * @category Framework / Context
 */
export declare class ContextProvider extends React.PureComponent<ContextProviderProps> {
    constructor(props: ContextProviderProps);
    render(): JSX.Element;
}
