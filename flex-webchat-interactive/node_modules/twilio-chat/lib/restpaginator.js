'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @class Paginator
 * @classdesc Pagination helper class
 *
 * @property {Array} items Array of elements on current page
 * @property {boolean} hasNextPage Indicates the existence of next page
 * @property {boolean} hasPrevPage Indicates the existence of previous page
 */
class RestPaginator {
    /*
    * @constructor
    * @param {Array} items Array of element for current page
    * @param {Object} params
    * @private
    */
    constructor(items, source, prevToken, nextToken) {
        this.state = {
            prevToken,
            nextToken,
            source,
            items
        };
    }
    get hasNextPage() { return !!this.state.nextToken; }
    get hasPrevPage() { return !!this.state.prevToken; }
    get items() { return this.state.items; }
    nextPage() {
        return this.hasNextPage ? this.state.source(this.state.nextToken) : Promise.reject(new Error('No next page'));
    }
    prevPage() {
        return this.hasPrevPage ? this.state.source(this.state.prevToken) : Promise.reject(new Error('No previous page'));
    }
}
exports.RestPaginator = RestPaginator;
